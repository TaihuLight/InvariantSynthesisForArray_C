*******************process function::  arrayCopy***************
*******************process function end::  arrayCopy***************
--------------------result--------------------
[B0] in :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select A _i0) (select B _i0)))))
] [(<= size i)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 size) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select A _i0) (select B _i0)))))
] 
[B1] in :[(> size i)] [(= (select A i) (select B i))] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select A _i0) (select B _i0)))))
] 
[B1]-> [B3] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select A _i0) (select B _i0)))))
] 
[B2] in :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select A _i0) (select B _i0)))))
] [(> size i)] 
[B2]-> [B1] out :[(> size i)] [(= (select A i) (select B i))] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select A _i0) (select B _i0)))))
] 
[B3] in :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select A _i0) (select B _i0)))))
] 
[B3]-> [B2] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select A _i0) (select B _i0)))))
] [(> size i)] 
[B3]-> [B0] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select A _i0) (select B _i0)))))
] [(<= size i)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 size) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select A _i0) (select B _i0)))))
] 
[B4] in :
[B4]-> [B3] out :[(= i 0)] [(phi i 0 1)] 
[B5] in :
[B5]-> [B4] out :
time: 0.710450 s
*******************process function::  arrayIf***************
*******************process function end::  arrayIf***************
--------------------result--------------------
[B0] in :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (not (= (select A _i0) 0)))))
] 
[B1] in :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (not (= (select A _i0) 0)))))
] [(<= size i)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 size) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (not (= (select A _i0) 0)))))
] 
[B1]-> [B0] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (not (= (select A _i0) 0)))))
] [(<= size i)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 size) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (not (= (select A _i0) 0)))))
] [(= _ret 0)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= _ret _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (not (= (select A _i0) 0)))))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= _ret _i0) (< _i0 size) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (not (= (select A _i0) 0)))))
] 
[B2] in :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (not (= (select A _i0) 0)))))
] [(> size i)] [(not (= (select A i) 0))] 
[B2]-> [B5] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (not (= (select A _i0) 0)))))
] 
[B3] in :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (not (= (select A _i0) 0)))))
] [(> size i)] [(= (select A i) 0)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= (select A i) _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (not (= (select A _i0) 0)))))
] 
[B3]-> [B0] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (not (= (select A _i0) 0)))))
] [(> size i)] [(= (select A i) 0)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= (select A i) _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (not (= (select A _i0) 0)))))
] [(= _ret 1)] 
[B4] in :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (not (= (select A _i0) 0)))))
] [(> size i)] 
[B4]-> [B3] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (not (= (select A _i0) 0)))))
] [(> size i)] [(= (select A i) 0)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= (select A i) _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (not (= (select A _i0) 0)))))
] 
[B4]-> [B2] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (not (= (select A _i0) 0)))))
] [(> size i)] [(not (= (select A i) 0))] 
[B5] in :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (not (= (select A _i0) 0)))))
] 
[B5]-> [B4] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (not (= (select A _i0) 0)))))
] [(> size i)] 
[B5]-> [B1] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (not (= (select A _i0) 0)))))
] [(<= size i)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 size) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (not (= (select A _i0) 0)))))
] 
[B6] in :
[B6]-> [B5] out :[(= i 0)] [(phi i 0 1)] 
[B7] in :
[B7]-> [B6] out :
time: 0.811157 s
*******************process function::  towDarrayCopy***************
*******************process function end::  towDarrayCopy***************
--------------------result--------------------
[B0] in :[
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0)))
        (a!2 (forall ((_i0 Int))
               (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0))))
                 (=> a!1
                     (= (select (select A _i1) _i0) (select (select B _i1) _i0)))))))
    (=> a!1 a!2)))
] [(<= row i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 row) (= (mod (- _i1 0) 1) 0)))
        (a!2 (forall ((_i0 Int))
               (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0))))
                 (=> a!1
                     (= (select (select A _i1) _i0) (select (select B _i1) _i0)))))))
    (=> a!1 a!2)))
] 
[B1] in :[(> row i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0)))
        (a!2 (forall ((_i0 Int))
               (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0))))
                 (=> a!1
                     (= (select (select A _i1) _i0) (select (select B _i1) _i0)))))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select (select A i) _i0) (select (select B i) _i0)))))
] [(<= col j)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select (select A i) _i0) (select (select B i) _i0)))))
] 
[B1]-> [B6] out :[(<= col j)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0)))
        (a!2 (forall ((_i0 Int))
               (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0))))
                 (=> a!1
                     (= (select (select A _i1) _i0) (select (select B _i1) _i0)))))))
    (=> a!1 a!2)))
] 
[B2] in :[(> row i)] [(> col j)] [(= (select (select A i) j) (select (select B i) j))] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0)))
        (a!2 (forall ((_i0 Int))
               (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0))))
                 (=> a!1
                     (= (select (select A _i1) _i0) (select (select B _i1) _i0)))))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select (select A i) _i0) (select (select B i) _i0)))))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0)))
        (a!2 (forall ((_i0 Int))
               (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0))))
                 (=> a!1
                     (= (select (select A _i1) _i0) (select (select B _i1) _i0)))))))
    (=> a!1 a!2)))
] 
[B2]-> [B4] out :[(> row i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0)))
        (a!2 (forall ((_i0 Int))
               (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0))))
                 (=> a!1
                     (= (select (select A _i1) _i0) (select (select B _i1) _i0)))))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select (select A i) _i0) (select (select B i) _i0)))))
] 
[B3] in :[
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0)))
        (a!2 (forall ((_i0 Int))
               (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0))))
                 (=> a!1
                     (= (select (select A _i1) _i0) (select (select B _i1) _i0)))))))
    (=> a!1 a!2)))
] [(> row i)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select (select A i) _i0) (select (select B i) _i0)))))
] [(> col j)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0)))
        (a!2 (forall ((_i0 Int))
               (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0))))
                 (=> a!1
                     (= (select (select A _i1) _i0) (select (select B _i1) _i0)))))))
    (=> a!1 a!2)))
] 
[B3]-> [B2] out :[(> row i)] [(> col j)] [(= (select (select A i) j) (select (select B i) j))] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0)))
        (a!2 (forall ((_i0 Int))
               (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0))))
                 (=> a!1
                     (= (select (select A _i1) _i0) (select (select B _i1) _i0)))))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select (select A i) _i0) (select (select B i) _i0)))))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0)))
        (a!2 (forall ((_i0 Int))
               (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0))))
                 (=> a!1
                     (= (select (select A _i1) _i0) (select (select B _i1) _i0)))))))
    (=> a!1 a!2)))
] 
[B4] in :[(> row i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0)))
        (a!2 (forall ((_i0 Int))
               (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0))))
                 (=> a!1
                     (= (select (select A _i1) _i0) (select (select B _i1) _i0)))))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select (select A i) _i0) (select (select B i) _i0)))))
] 
[B4]-> [B3] out :[(> row i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0)))
        (a!2 (forall ((_i0 Int))
               (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0))))
                 (=> a!1
                     (= (select (select A _i1) _i0) (select (select B _i1) _i0)))))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select (select A i) _i0) (select (select B i) _i0)))))
] [(> col j)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0)))
        (a!2 (forall ((_i0 Int))
               (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0))))
                 (=> a!1
                     (= (select (select A _i1) _i0) (select (select B _i1) _i0)))))))
    (=> a!1 a!2)))
] 
[B4]-> [B1] out :[(> row i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0)))
        (a!2 (forall ((_i0 Int))
               (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0))))
                 (=> a!1
                     (= (select (select A _i1) _i0) (select (select B _i1) _i0)))))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select (select A i) _i0) (select (select B i) _i0)))))
] [(<= col j)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select (select A i) _i0) (select (select B i) _i0)))))
] 
[B5] in :[
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0)))
        (a!2 (forall ((_i0 Int))
               (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0))))
                 (=> a!1
                     (= (select (select A _i1) _i0) (select (select B _i1) _i0)))))))
    (=> a!1 a!2)))
] [(> row i)] 
[B5]-> [B4] out :[
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0)))
        (a!2 (forall ((_i0 Int))
               (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0))))
                 (=> a!1
                     (= (select (select A _i1) _i0) (select (select B _i1) _i0)))))))
    (=> a!1 a!2)))
] [(> row i)] [(= j 0)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= j _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0)))
        (a!2 (forall ((_i0 Int))
               (let ((a!1 (and (<= j _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0))))
                 (=> a!1
                     (= (select (select A _i1) _i0) (select (select B _i1) _i0)))))))
    (=> a!1 a!2)))
] [(phi j 0 1)] 
[B6] in :[
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0)))
        (a!2 (forall ((_i0 Int))
               (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0))))
                 (=> a!1
                     (= (select (select A _i1) _i0) (select (select B _i1) _i0)))))))
    (=> a!1 a!2)))
] 
[B6]-> [B5] out :[
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0)))
        (a!2 (forall ((_i0 Int))
               (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0))))
                 (=> a!1
                     (= (select (select A _i1) _i0) (select (select B _i1) _i0)))))))
    (=> a!1 a!2)))
] [(> row i)] 
[B6]-> [B0] out :[
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0)))
        (a!2 (forall ((_i0 Int))
               (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0))))
                 (=> a!1
                     (= (select (select A _i1) _i0) (select (select B _i1) _i0)))))))
    (=> a!1 a!2)))
] [(<= row i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 row) (= (mod (- _i1 0) 1) 0)))
        (a!2 (forall ((_i0 Int))
               (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0))))
                 (=> a!1
                     (= (select (select A _i1) _i0) (select (select B _i1) _i0)))))))
    (=> a!1 a!2)))
] 
[B7] in :
[B7]-> [B6] out :[(= i 0)] [(phi i 0 1)] 
[B8] in :
[B8]-> [B7] out :
time: 6.088685 s
*******************process function::  towDarrayIf***************
*******************process function end::  towDarrayIf***************
--------------------result--------------------
[B0] in :[
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(= _ret flag)] 
[B1] in :[
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] 
[B1]-> [B0] out :[
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(= _ret flag)] 
[B2] in :[(= flag 0)] [(not (= flag 1))] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(> row i)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] [(<= col j)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= flag _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= flag _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= flag _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= flag _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] 
[B2]-> [B10] out :[(= flag 0)] [(not (= flag 1))] [(<= col j)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= flag _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= flag _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] 
[B3] in :[
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(> row i)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] [(> col j)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(= (select (select A i) j) 0)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= (select (select A i) j) _i1)
                  (< _i1 i)
                  (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= (select (select A i) j) _i0)
                          (< _i0 col)
                          (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= (select (select A i) j) _i0)
                  (< _i0 j)
                  (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= (select (select A i) j) _i1)
                  (< _i1 i)
                  (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= (select (select A i) j) _i0)
                          (< _i0 j)
                          (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(= flag 1)] 
[B3]-> [B1] out :[
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(> row i)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] [(> col j)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(= (select (select A i) j) 0)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= (select (select A i) j) _i1)
                  (< _i1 i)
                  (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= (select (select A i) j) _i0)
                          (< _i0 col)
                          (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= (select (select A i) j) _i0)
                  (< _i0 j)
                  (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= (select (select A i) j) _i1)
                  (< _i1 i)
                  (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= (select (select A i) j) _i0)
                          (< _i0 j)
                          (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(= flag 1)] 
[B4] in :[
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(> row i)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] 
[B4]-> [B3] out :[
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(> row i)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] [(> col j)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(= (select (select A i) j) 0)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= (select (select A i) j) _i1)
                  (< _i1 i)
                  (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= (select (select A i) j) _i0)
                          (< _i0 col)
                          (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= (select (select A i) j) _i0)
                  (< _i0 j)
                  (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= (select (select A i) j) _i1)
                  (< _i1 i)
                  (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= (select (select A i) j) _i0)
                          (< _i0 j)
                          (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(= flag 1)] 
[B4]-> [B2] out :[(= flag 0)] [(not (= flag 1))] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(> row i)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] [(<= col j)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= flag _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= flag _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= flag _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= flag _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] 
[B5] in :[(= flag 0)] [(not (= flag 1))] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(> row i)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] [(> col j)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= flag _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= flag _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= flag _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= flag _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= flag _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(not (= (select (select A i) j) 0))] 
[B5]-> [B8] out :[(= flag 0)] [(not (= flag 1))] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(> row i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= flag _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= flag _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= flag _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] 
[B6] in :[(= flag 0)] [(not (= flag 1))] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(> row i)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] [(> col j)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= flag _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= flag _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= flag _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= flag _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= flag _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(= (select (select A i) j) 0)] [(= (select (select A i) j) flag)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= (select (select A i) j) _i1)
                  (< _i1 i)
                  (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= (select (select A i) j) _i0)
                          (< _i0 col)
                          (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= (select (select A i) j) _i0)
                  (< _i0 j)
                  (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= (select (select A i) j) _i1)
                  (< _i1 i)
                  (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= (select (select A i) j) _i0)
                          (< _i0 j)
                          (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] 
[B6]-> [B4] out :[
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(> row i)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] [(> col j)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(= (select (select A i) j) 0)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= (select (select A i) j) _i1)
                  (< _i1 i)
                  (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= (select (select A i) j) _i0)
                          (< _i0 col)
                          (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= (select (select A i) j) _i0)
                  (< _i0 j)
                  (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= (select (select A i) j) _i1)
                  (< _i1 i)
                  (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= (select (select A i) j) _i0)
                          (< _i0 j)
                          (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(= flag 1)] 
[B7] in :[(= flag 0)] [(not (= flag 1))] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(> row i)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] [(> col j)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= flag _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= flag _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= flag _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= flag _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= flag _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] 
[B7]-> [B6] out :[(= flag 0)] [(not (= flag 1))] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(> row i)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] [(> col j)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= flag _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= flag _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= flag _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= flag _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= flag _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(= (select (select A i) j) 0)] [(= (select (select A i) j) flag)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= (select (select A i) j) _i1)
                  (< _i1 i)
                  (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= (select (select A i) j) _i0)
                          (< _i0 col)
                          (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= (select (select A i) j) _i0)
                  (< _i0 j)
                  (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= (select (select A i) j) _i1)
                  (< _i1 i)
                  (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= (select (select A i) j) _i0)
                          (< _i0 j)
                          (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] 
[B7]-> [B5] out :[(= flag 0)] [(not (= flag 1))] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(> row i)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] [(> col j)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= flag _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= flag _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= flag _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= flag _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= flag _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(not (= (select (select A i) j) 0))] 
[B8] in :[(= flag 0)] [(not (= flag 1))] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(> row i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= flag _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= flag _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] 
[B8]-> [B7] out :[(= flag 0)] [(not (= flag 1))] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(> row i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= flag _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= flag _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] [(> col j)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= flag _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= flag _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= flag _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] 
[B8]-> [B4] out :[(= flag 0)] [(not (= flag 1))] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(> row i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= flag _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= flag _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] [(<= col j)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= flag _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= flag _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] 
[B9] in :[(= flag 0)] [(not (= flag 1))] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(> row i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= flag _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= flag _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] 
[B9]-> [B8] out :[(= flag 0)] [(not (= flag 1))] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(> row i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= flag _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= flag _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(= j 0)] [(= j flag)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= j _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= j _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(phi j 0 1)] 
[B10] in :[(= flag 0)] [(not (= flag 1))] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] 
[B10]-> [B9] out :[(= flag 0)] [(not (= flag 1))] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(> row i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= flag _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= flag _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] 
[B10]-> [B1] out :[(= flag 0)] [(not (= flag 1))] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(<= row i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= flag _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= flag _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 row) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= flag _i1) (< _i1 row) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= flag _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] 
[B11] in :
[B11]-> [B10] out :[(= flag 0)] [(= i 0)] [(= i flag)] [(phi i 0 1)] 
[B12] in :
[B12]-> [B11] out :
time: 10.868525 s
*******************process function::  towDarrayIf2***************
*******************process function end::  towDarrayIf2***************
--------------------result--------------------
[B0] in :[
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] 
[B1] in :[
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(<= row i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 row) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] 
[B1]-> [B0] out :[
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(<= row i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 row) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(= _ret 0)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= _ret _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= _ret _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= _ret _i1) (< _i1 row) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= _ret _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] 
[B2] in :[
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(> row i)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] [(<= col j)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] 
[B2]-> [B8] out :[(<= col j)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] 
[B3] in :[
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(> row i)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] [(> col j)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(not (= (select (select A i) j) 0))] 
[B3]-> [B6] out :[
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(> row i)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] 
[B4] in :[
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(> row i)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] [(> col j)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(= (select (select A i) j) 0)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= (select (select A i) j) _i1)
                  (< _i1 i)
                  (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= (select (select A i) j) _i0)
                          (< _i0 col)
                          (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= (select (select A i) j) _i0)
                  (< _i0 j)
                  (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= (select (select A i) j) _i1)
                  (< _i1 i)
                  (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= (select (select A i) j) _i0)
                          (< _i0 j)
                          (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] 
[B4]-> [B0] out :[
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(> row i)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] [(> col j)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(= (select (select A i) j) 0)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= (select (select A i) j) _i1)
                  (< _i1 i)
                  (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= (select (select A i) j) _i0)
                          (< _i0 col)
                          (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= (select (select A i) j) _i0)
                  (< _i0 j)
                  (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= (select (select A i) j) _i1)
                  (< _i1 i)
                  (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= (select (select A i) j) _i0)
                          (< _i0 j)
                          (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(= _ret 1)] 
[B5] in :[
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(> row i)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] [(> col j)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] 
[B5]-> [B4] out :[
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(> row i)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] [(> col j)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(= (select (select A i) j) 0)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= (select (select A i) j) _i1)
                  (< _i1 i)
                  (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= (select (select A i) j) _i0)
                          (< _i0 col)
                          (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= (select (select A i) j) _i0)
                  (< _i0 j)
                  (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= (select (select A i) j) _i1)
                  (< _i1 i)
                  (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= (select (select A i) j) _i0)
                          (< _i0 j)
                          (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] 
[B5]-> [B3] out :[
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(> row i)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] [(> col j)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(not (= (select (select A i) j) 0))] 
[B6] in :[
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(> row i)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] 
[B6]-> [B5] out :[
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(> row i)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] [(> col j)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] 
[B6]-> [B2] out :[
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(> row i)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] [(<= col j)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
        (a!2 (not (= (select (select A i) _i0) 0))))
    (=> a!1 a!2)))
] 
[B7] in :[
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(> row i)] 
[B7]-> [B6] out :[
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(> row i)] [(= j 0)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= j _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= j _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(phi j 0 1)] 
[B8] in :[
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] 
[B8]-> [B7] out :[
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(> row i)] 
[B8]-> [B1] out :[
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] [(<= row i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 row) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0)))
                (a!2 (not (= (select (select A _i1) _i0) 0))))
            (=> a!1 a!2))))))
] 
[B9] in :
[B9]-> [B8] out :[(= i 0)] [(phi i 0 1)] 
[B10] in :
[B10]-> [B9] out :
time: 5.013106 s
*******************process function::  arrayMax***************
*******************process function end::  arrayMax***************
--------------------result--------------------
[B0] in :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (<= (select A _i0) max))))
] [(<= size i)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 size) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (<= (select A _i0) max))))
] 
[B1] in :[(> size i)] [(<= (select A i) max)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (<= (select A _i0) max))))
] 
[B1]-> [B4] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (<= (select A _i0) max))))
] 
[B2] in :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (<= (select A _i0) max))))
] [(> size i)] [(> (select A i) max)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (< (select A _i0) (select A i)))))
] 
[B2]-> [B1] out :[(> size i)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (< (select A _i0) (select A i)))))
] [(= max (select A i))] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (< (select A _i0) max))))
] 
[B3] in :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (<= (select A _i0) max))))
] [(> size i)] 
[B3]-> [B2] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (<= (select A _i0) max))))
] [(> size i)] [(> (select A i) max)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (< (select A _i0) (select A i)))))
] 
[B3]-> [B1] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (<= (select A _i0) max))))
] [(> size i)] [(<= (select A i) max)] 
[B4] in :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (<= (select A _i0) max))))
] 
[B4]-> [B3] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (<= (select A _i0) max))))
] [(> size i)] 
[B4]-> [B0] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (<= (select A _i0) max))))
] [(<= size i)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 size) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (<= (select A _i0) max))))
] 
[B5] in :
[B5]-> [B4] out :[(= max (select A 0))] [(= i 0)] [(phi i 0 1)] 
[B6] in :
[B6]-> [B5] out :
time: 1.218627 s
*******************process function::  arrayInit***************
*******************process function end::  arrayInit***************
--------------------result--------------------
[B0] in :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0)))
        (a!2 (= (select A _i0) (+ 1 (select A (+ (- 1) _i0))))))
    (=> a!1 a!2)))
] [(<= size i)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 size) (= (mod (- _i0 0) 1) 0)))
        (a!2 (= (select A _i0) (+ 1 (select A (+ (- 1) _i0))))))
    (=> a!1 a!2)))
] 
[B1] in :[(> size i)] [(= (select A i) (+ 1 (select A (+ (- 1) i))))] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0)))
        (a!2 (= (select A _i0) (+ 1 (select A (+ (- 1) _i0))))))
    (=> a!1 a!2)))
] 
[B1]-> [B3] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0)))
        (a!2 (= (select A _i0) (+ 1 (select A (+ (- 1) _i0))))))
    (=> a!1 a!2)))
] 
[B2] in :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0)))
        (a!2 (= (select A _i0) (+ 1 (select A (+ (- 1) _i0))))))
    (=> a!1 a!2)))
] [(> size i)] 
[B2]-> [B1] out :[(> size i)] [(= (select A i) (+ 1 (select A (+ (- 1) i))))] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0)))
        (a!2 (= (select A _i0) (+ 1 (select A (+ (- 1) _i0))))))
    (=> a!1 a!2)))
] 
[B3] in :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0)))
        (a!2 (= (select A _i0) (+ 1 (select A (+ (- 1) _i0))))))
    (=> a!1 a!2)))
] 
[B3]-> [B2] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0)))
        (a!2 (= (select A _i0) (+ 1 (select A (+ (- 1) _i0))))))
    (=> a!1 a!2)))
] [(> size i)] 
[B3]-> [B0] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0)))
        (a!2 (= (select A _i0) (+ 1 (select A (+ (- 1) _i0))))))
    (=> a!1 a!2)))
] [(<= size i)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 size) (= (mod (- _i0 0) 1) 0)))
        (a!2 (= (select A _i0) (+ 1 (select A (+ (- 1) _i0))))))
    (=> a!1 a!2)))
] 
[B4] in :
[B4]-> [B3] out :[(= (select A 0) 7)] [(= i 0)] [(phi i 0 1)] 
[B5] in :
[B5]-> [B4] out :
time: 0.744337 s
*******************process function::  arrayInit2***************
*******************process function end::  arrayInit2***************
--------------------result--------------------
[B0] in :[(<= size i)] 
[B1] in :[(> size i)] [(= (select A (+ (- 1) i)) (+ 1 (select A i)))] 
[B1]-> [B3] out :
[B2] in :[(> size i)] 
[B2]-> [B1] out :[(> size i)] [(= (select A (+ (- 1) i)) (+ 1 (select A i)))] 
[B3] in :
[B3]-> [B2] out :[(> size i)] 
[B3]-> [B0] out :[(<= size i)] 
[B4] in :
[B4]-> [B3] out :[(= (select A 0) 7)] [(= i 1)] [(phi i 1 1)] 
[B5] in :
[B5]-> [B4] out :
time: 0.458187 s
*******************process function::  arrayInit3***************
*******************process function end::  arrayInit3***************
--------------------result--------------------
[B0] in :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select A _i0) 0))))
] [(<= size i)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 size) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select A _i0) 0))))
] 
[B1] in :[(> size i)] [(= (select A i) 0)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select A _i0) 0))))
] 
[B1]-> [B3] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select A _i0) 0))))
] 
[B2] in :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select A _i0) 0))))
] [(> size i)] 
[B2]-> [B1] out :[(> size i)] [(= (select A i) 0)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select A _i0) 0))))
] 
[B3] in :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select A _i0) 0))))
] 
[B3]-> [B2] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select A _i0) 0))))
] [(> size i)] 
[B3]-> [B0] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select A _i0) 0))))
] [(<= size i)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 size) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select A _i0) 0))))
] 
[B4] in :
[B4]-> [B3] out :[(= i 0)] [(phi i 0 1)] 
[B5] in :
[B5]-> [B4] out :
time: 0.845187 s
*******************process function::  arraySentinel***************
*******************process function end::  arraySentinel***************
--------------------result--------------------
[B0] in :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (not (= (select A _i0) x)))))
] 
[B1] in :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (not (= (select A _i0) x)))))
] 
[B1]-> [B4] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (not (= (select A _i0) x)))))
] 
[B2] in :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (not (= (select A _i0) x)))))
] [(not (= (select A i) x))] [(> size i)] 
[B2]-> [B1] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (not (= (select A _i0) x)))))
] 
[B3] in :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (not (= (select A _i0) x)))))
] [(not (= (select A i) x))] 
[B3]-> [B2] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (not (= (select A _i0) x)))))
] [(not (= (select A i) x))] [(> size i)] 
[B3]-> [B0] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (not (= (select A _i0) x)))))
] [(not (= (select A i) x))] [(<= size i)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 size) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (not (= (select A _i0) x)))))
] 
[B4] in :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (not (= (select A _i0) x)))))
] 
[B4]-> [B3] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (not (= (select A _i0) x)))))
] [(not (= (select A i) x))] 
[B4]-> [B0] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (not (= (select A _i0) x)))))
] [(= (select A i) x)] 
[B5] in :
[B5]-> [B4] out :[(= i 0)] [(phi i 0 1)] 
[B6] in :
[B6]-> [B5] out :
time: 0.518538 s
*******************process function::  arraySentinel2***************
*******************process function end::  arraySentinel2***************
--------------------result--------------------
[B0] in :[(= (select A size) x)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (not (= (select A _i0) x)))))
] 
[B1] in :[(= (select A size) x)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (not (= (select A _i0) x)))))
] 
[B1]-> [B4] out :[(= (select A size) x)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (not (= (select A _i0) x)))))
] 
[B2] in :[(= (select A size) x)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (not (= (select A _i0) x)))))
] [(not (= (select A i) x))] [(> size i)] 
[B2]-> [B1] out :[(= (select A size) x)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (not (= (select A _i0) x)))))
] 
[B3] in :[(= (select A size) x)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (not (= (select A _i0) x)))))
] [(not (= (select A i) x))] 
[B3]-> [B2] out :[(= (select A size) x)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (not (= (select A _i0) x)))))
] [(not (= (select A i) x))] [(> size i)] 
[B3]-> [B0] out :[(= (select A size) x)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (not (= (select A _i0) x)))))
] [(not (= (select A i) x))] [(<= size i)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 size) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (not (= (select A _i0) x)))))
] 
[B4] in :[(= (select A size) x)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (not (= (select A _i0) x)))))
] 
[B4]-> [B3] out :[(= (select A size) x)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (not (= (select A _i0) x)))))
] [(not (= (select A i) x))] 
[B4]-> [B0] out :[(= (select A size) x)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (not (= (select A _i0) x)))))
] [(= (select A i) x)] [(= (select A i) (select A size))] 
[B5] in :
[B5]-> [B4] out :[(= (select A size) x)] [(= i 0)] [(phi i 0 1)] 
[B6] in :
[B6]-> [B5] out :
time: 0.743730 s
*******************process function::  arrayPartition***************
*******************process function end::  arrayPartition***************
--------------------result--------------------
[B0] in :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (> x (select B _i0)))))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (<= x (select C _i0)))))
] [(<= size i)] 
[B1] in :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (> x (select B _i0)))))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (<= x (select C _i0)))))
] 
[B1]-> [B6] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (> x (select B _i0)))))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (<= x (select C _i0)))))
] 
[B2] in :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (> x (select B _i0)))))
] [(> size i)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (<= x (select C _i0)))))
] 
[B2]-> [B1] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (> x (select B _i0)))))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (<= x (select C _i0)))))
] 
[B3] in :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (> x (select B _i0)))))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (<= x (select C _i0)))))
] [(> size i)] [(<= x (select A i))] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (> (select A i) (select B _i0)))))
] 
[B3]-> [B2] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (> x (select B _i0)))))
] [(> size i)] [(<= x (select A i))] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (> (select A i) (select B _i0)))))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (<= x (select C _i0)))))
] 
[B4] in :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (> x (select B _i0)))))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (<= x (select C _i0)))))
] [(> size i)] [(> x (select A i))] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (< (select A i) (select C _i0)))))
] 
[B4]-> [B2] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (<= x (select C _i0)))))
] [(> size i)] [(> x (select A i))] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (< (select A i) (select C _i0)))))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (> x (select B _i0)))))
] 
[B5] in :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (> x (select B _i0)))))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (<= x (select C _i0)))))
] [(> size i)] 
[B5]-> [B4] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (> x (select B _i0)))))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (<= x (select C _i0)))))
] [(> size i)] [(> x (select A i))] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (< (select A i) (select C _i0)))))
] 
[B5]-> [B3] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (> x (select B _i0)))))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (<= x (select C _i0)))))
] [(> size i)] [(<= x (select A i))] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (> (select A i) (select B _i0)))))
] 
[B6] in :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (> x (select B _i0)))))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (<= x (select C _i0)))))
] 
[B6]-> [B5] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (> x (select B _i0)))))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (<= x (select C _i0)))))
] [(> size i)] 
[B6]-> [B0] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (> x (select B _i0)))))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (<= x (select C _i0)))))
] [(<= size i)] 
[B7] in :
[B7]-> [B6] out :[(= i 0)] [(phi i 0 1)] [(= j 0)] [(= j i)] [(phi j 0 1)] [(= k 0)] [(= k i)] [(= k j)] [(phi k 0 1)] 
[B8] in :
[B8]-> [B7] out :
time: 4.702023 s
*******************process function::  towArrayInit***************
*******************process function end::  towArrayInit***************
--------------------result--------------------
[B0] in :[
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0)))
        (a!2 (forall ((_i0 Int))
               (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0))))
                 (=> a!1 (= (select (select A _i1) _i0) 0))))))
    (=> a!1 a!2)))
] [(<= row i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 row) (= (mod (- _i1 0) 1) 0)))
        (a!2 (forall ((_i0 Int))
               (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0))))
                 (=> a!1 (= (select (select A _i1) _i0) 0))))))
    (=> a!1 a!2)))
] 
[B1] in :[(> row i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0)))
        (a!2 (forall ((_i0 Int))
               (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0))))
                 (=> a!1 (= (select (select A _i1) _i0) 0))))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select (select A i) _i0) 0))))
] [(<= col j)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select (select A i) _i0) 0))))
] 
[B1]-> [B6] out :[(<= col j)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0)))
        (a!2 (forall ((_i0 Int))
               (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0))))
                 (=> a!1 (= (select (select A _i1) _i0) 0))))))
    (=> a!1 a!2)))
] 
[B2] in :[(> row i)] [(> col j)] [(= (select (select A i) j) 0)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0)))
        (a!2 (forall ((_i0 Int))
               (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0))))
                 (=> a!1 (= (select (select A _i1) _i0) 0))))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select (select A i) _i0) 0))))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0)))
        (a!2 (forall ((_i0 Int))
               (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0))))
                 (=> a!1 (= (select (select A _i1) _i0) 0))))))
    (=> a!1 a!2)))
] 
[B2]-> [B4] out :[(> row i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0)))
        (a!2 (forall ((_i0 Int))
               (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0))))
                 (=> a!1 (= (select (select A _i1) _i0) 0))))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select (select A i) _i0) 0))))
] 
[B3] in :[(> row i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0)))
        (a!2 (forall ((_i0 Int))
               (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0))))
                 (=> a!1 (= (select (select A _i1) _i0) 0))))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select (select A i) _i0) 0))))
] [(> col j)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0)))
        (a!2 (forall ((_i0 Int))
               (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0))))
                 (=> a!1 (= (select (select A _i1) _i0) 0))))))
    (=> a!1 a!2)))
] 
[B3]-> [B2] out :[(> row i)] [(> col j)] [(= (select (select A i) j) 0)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0)))
        (a!2 (forall ((_i0 Int))
               (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0))))
                 (=> a!1 (= (select (select A _i1) _i0) 0))))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select (select A i) _i0) 0))))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0)))
        (a!2 (forall ((_i0 Int))
               (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0))))
                 (=> a!1 (= (select (select A _i1) _i0) 0))))))
    (=> a!1 a!2)))
] 
[B4] in :[(> row i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0)))
        (a!2 (forall ((_i0 Int))
               (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0))))
                 (=> a!1 (= (select (select A _i1) _i0) 0))))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select (select A i) _i0) 0))))
] 
[B4]-> [B3] out :[(> row i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0)))
        (a!2 (forall ((_i0 Int))
               (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0))))
                 (=> a!1 (= (select (select A _i1) _i0) 0))))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select (select A i) _i0) 0))))
] [(> col j)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0)))
        (a!2 (forall ((_i0 Int))
               (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0))))
                 (=> a!1 (= (select (select A _i1) _i0) 0))))))
    (=> a!1 a!2)))
] 
[B4]-> [B1] out :[(> row i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0)))
        (a!2 (forall ((_i0 Int))
               (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0))))
                 (=> a!1 (= (select (select A _i1) _i0) 0))))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 j) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select (select A i) _i0) 0))))
] [(<= col j)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select (select A i) _i0) 0))))
] 
[B5] in :[
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0)))
        (a!2 (forall ((_i0 Int))
               (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0))))
                 (=> a!1 (= (select (select A _i1) _i0) 0))))))
    (=> a!1 a!2)))
] [(> row i)] 
[B5]-> [B4] out :[
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0)))
        (a!2 (forall ((_i0 Int))
               (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0))))
                 (=> a!1 (= (select (select A _i1) _i0) 0))))))
    (=> a!1 a!2)))
] [(> row i)] [(= j 0)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= j _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0)))
        (a!2 (forall ((_i0 Int))
               (let ((a!1 (and (<= j _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0))))
                 (=> a!1 (= (select (select A _i1) _i0) j))))))
    (=> a!1 a!2)))
] [(phi j 0 1)] 
[B6] in :[
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0)))
        (a!2 (forall ((_i0 Int))
               (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0))))
                 (=> a!1 (= (select (select A _i1) _i0) 0))))))
    (=> a!1 a!2)))
] 
[B6]-> [B5] out :[
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0)))
        (a!2 (forall ((_i0 Int))
               (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0))))
                 (=> a!1 (= (select (select A _i1) _i0) 0))))))
    (=> a!1 a!2)))
] [(> row i)] 
[B6]-> [B0] out :[
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 i) (= (mod (- _i1 0) 1) 0)))
        (a!2 (forall ((_i0 Int))
               (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0))))
                 (=> a!1 (= (select (select A _i1) _i0) 0))))))
    (=> a!1 a!2)))
] [(<= row i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 row) (= (mod (- _i1 0) 1) 0)))
        (a!2 (forall ((_i0 Int))
               (let ((a!1 (and (<= 0 _i0) (< _i0 col) (= (mod (- _i0 0) 1) 0))))
                 (=> a!1 (= (select (select A _i1) _i0) 0))))))
    (=> a!1 a!2)))
] 
[B7] in :
[B7]-> [B6] out :[(= i 0)] [(phi i 0 1)] 
[B8] in :
[B8]-> [B7] out :
time: 20.024570 s
*******************process function::  firstNotNull***************
*******************process function end::  firstNotNull***************
--------------------result--------------------
[B0] in :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select A _i0) 0))))
] [(<= s (+ 1 i))] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 (+ (- 1) s)) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select A _i0) 0))))
] 
[B1] in :[(= s (+ 1 size))] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select A _i0) 0))))
] [(> size i)] [(> (+ (- 1) s) i)] [(= (select A i) 0)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= (select A i) _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select A _i0) (select A i)))))
] 
[B1]-> [B4] out :[(= s (+ 1 size))] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select A _i0) 0))))
] 
[B2] in :[(= s (+ 1 size))] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select A _i0) 0))))
] [(> size i)] [(> (+ (- 1) s) i)] [(not (= (select A i) 0))] 
[B2]-> [B0] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select A _i0) 0))))
] [(> size i)] [(not (= (select A i) 0))] [(= s i)] [(> size s)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 s) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select A _i0) 0))))
] 
[B3] in :[(= s (+ 1 size))] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select A _i0) 0))))
] [(> size i)] [(> (+ (- 1) s) i)] 
[B3]-> [B2] out :[(= s (+ 1 size))] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select A _i0) 0))))
] [(> size i)] [(> (+ (- 1) s) i)] [(not (= (select A i) 0))] 
[B3]-> [B1] out :[(= s (+ 1 size))] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select A _i0) 0))))
] [(> size i)] [(> (+ (- 1) s) i)] [(= (select A i) 0)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= (select A i) _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select A _i0) (select A i)))))
] 
[B4] in :[(= s (+ 1 size))] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select A _i0) 0))))
] 
[B4]-> [B3] out :[(= s (+ 1 size))] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select A _i0) 0))))
] [(> size i)] [(> (+ (- 1) s) i)] 
[B4]-> [B0] out :[(= s (+ 1 size))] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 i) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select A _i0) 0))))
] [(<= size i)] [(<= s (+ 1 i))] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 size) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select A _i0) 0))))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 (+ (- 1) s)) (= (mod (- _i0 0) 1) 0))))
    (=> a!1 (= (select A _i0) 0))))
] 
[B5] in :
[B5]-> [B4] out :[(= s (+ 1 size))] [(= i 0)] [(phi i 0 1)] 
[B6] in :
[B6]-> [B5] out :
time: 3.353518 s
*******************process function::  firstNotNull2***************
*******************process function end::  firstNotNull2***************
--------------------result--------------------
[B0] in :[(phi i 0 1)] [(<= size i)] 
[B1] in :[(phi i 0 1)] [(> size i)] 
[B1]-> [B5] out :[(phi i 0 1)] 
[B2] in :[(phi i 0 1)] [(> size i)] [(= s (+ 1 size))] [(> (+ (- 1) s) i)] [(not (= (select A i) 0))] 
[B2]-> [B1] out :[(phi i 0 1)] [(> size i)] [(not (= (select A i) 0))] [(= s i)] [(> size s)] 
[B3] in :[(phi i 0 1)] [(> size i)] [(= s (+ 1 size))] 
[B3]-> [B2] out :[(phi i 0 1)] [(> size i)] [(= s (+ 1 size))] [(> (+ (- 1) s) i)] [(not (= (select A i) 0))] 
[B3]-> [B1] out :[(phi i 0 1)] [(> size i)] [(= s (+ 1 size))] [(= (select A i) 0)] [(> (+ (- 1) s) i)] 
[B4] in :[(phi i 0 1)] [(> size i)] 
[B4]-> [B3] out :[(phi i 0 1)] [(> size i)] [(= s (+ 1 size))] 
[B4]-> [B1] out :[(phi i 0 1)] [(> size i)] [(not (= s (+ size 1)))] 
[B5] in :[(phi i 0 1)] 
[B5]-> [B4] out :[(phi i 0 1)] [(> size i)] 
[B5]-> [B0] out :[(phi i 0 1)] [(<= size i)] 
[B6] in :
[B6]-> [B5] out :[(= s (+ 1 size))] [(= i 0)] [(phi i 0 1)] 
[B7] in :
[B7]-> [B6] out :
time: 0.794907 s
*******************process function::  threeDarrayCopy***************
*******************process function end::  threeDarrayCopy***************
--------------------result--------------------
[B0] in :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0)
                                     (select (select (select B _i2) _i1) _i0))))
                         (=> a!1 a!2))))))))
    (=> a!1 a!2)))
] [(<= d1 i)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 d1) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0)
                                     (select (select (select B _i2) _i1) _i0))))
                         (=> a!1 a!2))))))))
    (=> a!1 a!2)))
] 
[B1] in :[(> d1 i)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0)
                                     (select (select (select B _i2) _i1) _i0))))
                         (=> a!1 a!2))))))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0)
                        (select (select (select B i) _i1) _i0))))
            (=> a!1 a!2))))))
] [(<= d2 j)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0)
                        (select (select (select B i) _i1) _i0))))
            (=> a!1 a!2))))))
] 
[B1]-> [B9] out :[(<= d2 j)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0)
                                     (select (select (select B _i2) _i1) _i0))))
                         (=> a!1 a!2))))))))
    (=> a!1 a!2)))
] 
[B2] in :[(> d1 i)] [(> d2 j)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0)
                                     (select (select (select B _i2) _i1) _i0))))
                         (=> a!1 a!2))))))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0)
                        (select (select (select B i) _i1) _i0))))
            (=> a!1 a!2))))))
] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0)
                                     (select (select (select B _i2) _i1) _i0))))
                         (=> a!1 a!2))))))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
        (a!2 (= (select (select (select A i) j) _i0)
                (select (select (select B i) j) _i0))))
    (=> a!1 a!2)))
] [(<= d3 k)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
        (a!2 (= (select (select (select A i) j) _i0)
                (select (select (select B i) j) _i0))))
    (=> a!1 a!2)))
] 
[B2]-> [B7] out :[(> d1 i)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0)
                                     (select (select (select B _i2) _i1) _i0))))
                         (=> a!1 a!2))))))))
    (=> a!1 a!2)))
] [(<= d3 k)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0)
                        (select (select (select B i) _i1) _i0))))
            (=> a!1 a!2))))))
] 
[B3] in :[(> d1 i)] [(> d2 j)] [(> d3 k)] [(= (select (select (select A i) j) k) (select (select (select B i) j) k))] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0)
                                     (select (select (select B _i2) _i1) _i0))))
                         (=> a!1 a!2))))))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0)
                        (select (select (select B i) _i1) _i0))))
            (=> a!1 a!2))))))
] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0)
                                     (select (select (select B _i2) _i1) _i0))))
                         (=> a!1 a!2))))))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
        (a!2 (= (select (select (select A i) j) _i0)
                (select (select (select B i) j) _i0))))
    (=> a!1 a!2)))
] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 k)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0)
                                     (select (select (select B _i2) _i1) _i0))))
                         (=> a!1 a!2))))))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0)
                        (select (select (select B i) _i1) _i0))))
            (=> a!1 a!2))))))
] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 k)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0)
                                     (select (select (select B _i2) _i1) _i0))))
                         (=> a!1 a!2))))))))
    (=> a!1 a!2)))
] 
[B3]-> [B5] out :[(> d1 i)] [(> d2 j)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0)
                                     (select (select (select B _i2) _i1) _i0))))
                         (=> a!1 a!2))))))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0)
                        (select (select (select B i) _i1) _i0))))
            (=> a!1 a!2))))))
] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0)
                                     (select (select (select B _i2) _i1) _i0))))
                         (=> a!1 a!2))))))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
        (a!2 (= (select (select (select A i) j) _i0)
                (select (select (select B i) j) _i0))))
    (=> a!1 a!2)))
] 
[B4] in :[(> d1 i)] [(> d2 j)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0)
                                     (select (select (select B _i2) _i1) _i0))))
                         (=> a!1 a!2))))))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0)
                        (select (select (select B i) _i1) _i0))))
            (=> a!1 a!2))))))
] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0)
                                     (select (select (select B _i2) _i1) _i0))))
                         (=> a!1 a!2))))))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
        (a!2 (= (select (select (select A i) j) _i0)
                (select (select (select B i) j) _i0))))
    (=> a!1 a!2)))
] [(> d3 k)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 k)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0)
                                     (select (select (select B _i2) _i1) _i0))))
                         (=> a!1 a!2))))))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0)
                        (select (select (select B i) _i1) _i0))))
            (=> a!1 a!2))))))
] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 k)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0)
                                     (select (select (select B _i2) _i1) _i0))))
                         (=> a!1 a!2))))))))
    (=> a!1 a!2)))
] 
[B4]-> [B3] out :[(> d1 i)] [(> d2 j)] [(> d3 k)] [(= (select (select (select A i) j) k) (select (select (select B i) j) k))] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0)
                                     (select (select (select B _i2) _i1) _i0))))
                         (=> a!1 a!2))))))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0)
                        (select (select (select B i) _i1) _i0))))
            (=> a!1 a!2))))))
] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0)
                                     (select (select (select B _i2) _i1) _i0))))
                         (=> a!1 a!2))))))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
        (a!2 (= (select (select (select A i) j) _i0)
                (select (select (select B i) j) _i0))))
    (=> a!1 a!2)))
] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 k)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0)
                                     (select (select (select B _i2) _i1) _i0))))
                         (=> a!1 a!2))))))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0)
                        (select (select (select B i) _i1) _i0))))
            (=> a!1 a!2))))))
] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 k)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0)
                                     (select (select (select B _i2) _i1) _i0))))
                         (=> a!1 a!2))))))))
    (=> a!1 a!2)))
] 
[B5] in :[(> d1 i)] [(> d2 j)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0)
                                     (select (select (select B _i2) _i1) _i0))))
                         (=> a!1 a!2))))))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0)
                        (select (select (select B i) _i1) _i0))))
            (=> a!1 a!2))))))
] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0)
                                     (select (select (select B _i2) _i1) _i0))))
                         (=> a!1 a!2))))))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
        (a!2 (= (select (select (select A i) j) _i0)
                (select (select (select B i) j) _i0))))
    (=> a!1 a!2)))
] 
[B5]-> [B4] out :[(> d1 i)] [(> d2 j)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0)
                                     (select (select (select B _i2) _i1) _i0))))
                         (=> a!1 a!2))))))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0)
                        (select (select (select B i) _i1) _i0))))
            (=> a!1 a!2))))))
] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0)
                                     (select (select (select B _i2) _i1) _i0))))
                         (=> a!1 a!2))))))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
        (a!2 (= (select (select (select A i) j) _i0)
                (select (select (select B i) j) _i0))))
    (=> a!1 a!2)))
] [(> d3 k)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 k)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0)
                                     (select (select (select B _i2) _i1) _i0))))
                         (=> a!1 a!2))))))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0)
                        (select (select (select B i) _i1) _i0))))
            (=> a!1 a!2))))))
] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 k)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0)
                                     (select (select (select B _i2) _i1) _i0))))
                         (=> a!1 a!2))))))))
    (=> a!1 a!2)))
] 
[B5]-> [B2] out :[(> d1 i)] [(> d2 j)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0)
                                     (select (select (select B _i2) _i1) _i0))))
                         (=> a!1 a!2))))))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0)
                        (select (select (select B i) _i1) _i0))))
            (=> a!1 a!2))))))
] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0)
                                     (select (select (select B _i2) _i1) _i0))))
                         (=> a!1 a!2))))))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
        (a!2 (= (select (select (select A i) j) _i0)
                (select (select (select B i) j) _i0))))
    (=> a!1 a!2)))
] [(<= d3 k)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
        (a!2 (= (select (select (select A i) j) _i0)
                (select (select (select B i) j) _i0))))
    (=> a!1 a!2)))
] 
[B6] in :[(> d1 i)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0)
                                     (select (select (select B _i2) _i1) _i0))))
                         (=> a!1 a!2))))))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0)
                        (select (select (select B i) _i1) _i0))))
            (=> a!1 a!2))))))
] [(> d2 j)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0)
                                     (select (select (select B _i2) _i1) _i0))))
                         (=> a!1 a!2))))))))
    (=> a!1 a!2)))
] 
[B6]-> [B5] out :[(> d1 i)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0)
                                     (select (select (select B _i2) _i1) _i0))))
                         (=> a!1 a!2))))))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0)
                        (select (select (select B i) _i1) _i0))))
            (=> a!1 a!2))))))
] [(> d2 j)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0)
                                     (select (select (select B _i2) _i1) _i0))))
                         (=> a!1 a!2))))))))
    (=> a!1 a!2)))
] [(= k 0)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= k _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= k _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= k _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0)
                                     (select (select (select B _i2) _i1) _i0))))
                         (=> a!1 a!2))))))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= k _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= k _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0)
                        (select (select (select B i) _i1) _i0))))
            (=> a!1 a!2))))))
] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= k _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= k _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= k _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0)
                                     (select (select (select B _i2) _i1) _i0))))
                         (=> a!1 a!2))))))))
    (=> a!1 a!2)))
] [(phi k 0 1)] 
[B7] in :[(> d1 i)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0)
                                     (select (select (select B _i2) _i1) _i0))))
                         (=> a!1 a!2))))))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0)
                        (select (select (select B i) _i1) _i0))))
            (=> a!1 a!2))))))
] 
[B7]-> [B6] out :[(> d1 i)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0)
                                     (select (select (select B _i2) _i1) _i0))))
                         (=> a!1 a!2))))))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0)
                        (select (select (select B i) _i1) _i0))))
            (=> a!1 a!2))))))
] [(> d2 j)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0)
                                     (select (select (select B _i2) _i1) _i0))))
                         (=> a!1 a!2))))))))
    (=> a!1 a!2)))
] 
[B7]-> [B1] out :[(> d1 i)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0)
                                     (select (select (select B _i2) _i1) _i0))))
                         (=> a!1 a!2))))))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0)
                        (select (select (select B i) _i1) _i0))))
            (=> a!1 a!2))))))
] [(<= d2 j)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0)
                        (select (select (select B i) _i1) _i0))))
            (=> a!1 a!2))))))
] 
[B8] in :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0)
                                     (select (select (select B _i2) _i1) _i0))))
                         (=> a!1 a!2))))))))
    (=> a!1 a!2)))
] [(> d1 i)] 
[B8]-> [B7] out :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0)
                                     (select (select (select B _i2) _i1) _i0))))
                         (=> a!1 a!2))))))))
    (=> a!1 a!2)))
] [(> d1 i)] [(= j 0)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= j _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= j _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= j _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0)
                                     (select (select (select B _i2) _i1) _i0))))
                         (=> a!1 a!2))))))))
    (=> a!1 a!2)))
] [(phi j 0 1)] 
[B9] in :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0)
                                     (select (select (select B _i2) _i1) _i0))))
                         (=> a!1 a!2))))))))
    (=> a!1 a!2)))
] 
[B9]-> [B8] out :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0)
                                     (select (select (select B _i2) _i1) _i0))))
                         (=> a!1 a!2))))))))
    (=> a!1 a!2)))
] [(> d1 i)] 
[B9]-> [B0] out :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0)
                                     (select (select (select B _i2) _i1) _i0))))
                         (=> a!1 a!2))))))))
    (=> a!1 a!2)))
] [(<= d1 i)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 d1) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0)
                                     (select (select (select B _i2) _i1) _i0))))
                         (=> a!1 a!2))))))))
    (=> a!1 a!2)))
] 
[B10] in :
[B10]-> [B9] out :[(= i 0)] [(phi i 0 1)] 
[B11] in :
[B11]-> [B10] out :
time: 48.128974 s
*******************process function::  threeDarrayCheck***************
*******************process function end::  threeDarrayCheck***************
--------------------result--------------------
[B0] in :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] 
[B1] in :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] 
[B1]-> [B0] out :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] 
[B2] in :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(> d1 i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [(<= d2 j)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] 
[B2]-> [B11] out :[(<= d2 j)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] 
[B3] in :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(> d1 i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [(> d2 j)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
        (a!2 (= (select (select (select A i) j) _i0) 0)))
    (=> a!1 (not a!2))))
] [(<= d3 k)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
        (a!2 (= (select (select (select A i) j) _i0) 0)))
    (=> a!1 (not a!2))))
] 
[B3]-> [B9] out :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(> d1 i)] [(<= d3 k)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] 
[B4] in :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(> d1 i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [(> d2 j)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
        (a!2 (= (select (select (select A i) j) _i0) 0)))
    (=> a!1 (not a!2))))
] [(> d3 k)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 k)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 k)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(let ((a!1 (= (select (select (select A i) j) k) 0)))
  (not a!1))] 
[B4]-> [B7] out :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(> d1 i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [(> d2 j)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
        (a!2 (= (select (select (select A i) j) _i0) 0)))
    (=> a!1 (not a!2))))
] 
[B5] in :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(> d1 i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [(> d2 j)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
        (a!2 (= (select (select (select A i) j) _i0) 0)))
    (=> a!1 (not a!2))))
] [(> d3 k)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 k)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 k)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(= (select (select (select A i) j) k) 0)] [
(forall ((_i2 Int))
  (let ((a!1 (<= (select (select (select A i) j) k) _i2))
        (a!3 (forall ((_i1 Int))
               (let ((a!1 (<= (select (select (select A i) j) k) _i1)))
               (let ((a!2 (and a!1 (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!2
                     (forall ((_i0 Int))
                       (let ((a!1 (<= (select (select (select A i) j) k) _i0))
                             (a!3 (= (select (select (select A _i2) _i1) _i0) 0)))
                       (let ((a!2 (and a!1 (< _i0 d3) (= (mod (- _i0 0) 1) 0))))
                         (=> a!2 (not a!3)))))))))))
  (let ((a!2 (and a!1 (< _i2 i) (= (mod (- _i2 0) 1) 0))))
    (=> a!2 a!3))))
] [
(forall ((_i1 Int))
  (let ((a!1 (<= (select (select (select A i) j) k) _i1)))
  (let ((a!2 (and a!1 (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!2
        (forall ((_i0 Int))
          (let ((a!1 (<= (select (select (select A i) j) k) _i0))
                (a!3 (= (select (select (select A i) _i1) _i0) 0)))
          (let ((a!2 (and a!1 (< _i0 d3) (= (mod (- _i0 0) 1) 0))))
            (=> a!2 (not a!3)))))))))
] [
(forall ((_i2 Int))
  (let ((a!1 (<= (select (select (select A i) j) k) _i2))
        (a!3 (forall ((_i1 Int))
               (let ((a!1 (<= (select (select (select A i) j) k) _i1)))
               (let ((a!2 (and a!1 (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!2
                     (forall ((_i0 Int))
                       (let ((a!1 (<= (select (select (select A i) j) k) _i0))
                             (a!3 (= (select (select (select A _i2) _i1) _i0) 0)))
                       (let ((a!2 (and a!1 (< _i0 d3) (= (mod (- _i0 0) 1) 0))))
                         (=> a!2 (not a!3)))))))))))
  (let ((a!2 (and a!1 (< _i2 i) (= (mod (- _i2 0) 1) 0))))
    (=> a!2 a!3))))
] [
(forall ((_i0 Int))
  (let ((a!1 (<= (select (select (select A i) j) k) _i0))
        (a!3 (= (select (select (select A i) j) _i0) 0)))
  (let ((a!2 (and a!1 (< _i0 k) (= (mod (- _i0 0) 1) 0))))
    (=> a!2 (not a!3)))))
] [
(forall ((_i2 Int))
  (let ((a!1 (<= (select (select (select A i) j) k) _i2))
        (a!3 (forall ((_i1 Int))
               (let ((a!1 (<= (select (select (select A i) j) k) _i1)))
               (let ((a!2 (and a!1 (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!2
                     (forall ((_i0 Int))
                       (let ((a!1 (<= (select (select (select A i) j) k) _i0))
                             (a!3 (= (select (select (select A _i2) _i1) _i0) 0)))
                       (let ((a!2 (and a!1 (< _i0 k) (= (mod (- _i0 0) 1) 0))))
                         (=> a!2 (not a!3)))))))))))
  (let ((a!2 (and a!1 (< _i2 i) (= (mod (- _i2 0) 1) 0))))
    (=> a!2 a!3))))
] [
(forall ((_i1 Int))
  (let ((a!1 (<= (select (select (select A i) j) k) _i1)))
  (let ((a!2 (and a!1 (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!2
        (forall ((_i0 Int))
          (let ((a!1 (<= (select (select (select A i) j) k) _i0))
                (a!3 (= (select (select (select A i) _i1) _i0) 0)))
          (let ((a!2 (and a!1 (< _i0 k) (= (mod (- _i0 0) 1) 0))))
            (=> a!2 (not a!3)))))))))
] [
(forall ((_i2 Int))
  (let ((a!1 (<= (select (select (select A i) j) k) _i2))
        (a!3 (forall ((_i1 Int))
               (let ((a!1 (<= (select (select (select A i) j) k) _i1)))
               (let ((a!2 (and a!1 (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!2
                     (forall ((_i0 Int))
                       (let ((a!1 (<= (select (select (select A i) j) k) _i0))
                             (a!3 (= (select (select (select A _i2) _i1) _i0) 0)))
                       (let ((a!2 (and a!1 (< _i0 k) (= (mod (- _i0 0) 1) 0))))
                         (=> a!2 (not a!3)))))))))))
  (let ((a!2 (and a!1 (< _i2 i) (= (mod (- _i2 0) 1) 0))))
    (=> a!2 a!3))))
] 
[B5]-> [B1] out :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(> d1 i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [(> d2 j)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
        (a!2 (= (select (select (select A i) j) _i0) 0)))
    (=> a!1 (not a!2))))
] [(> d3 k)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 k)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 k)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(= (select (select (select A i) j) k) 0)] [
(forall ((_i2 Int))
  (let ((a!1 (<= (select (select (select A i) j) k) _i2))
        (a!3 (forall ((_i1 Int))
               (let ((a!1 (<= (select (select (select A i) j) k) _i1)))
               (let ((a!2 (and a!1 (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!2
                     (forall ((_i0 Int))
                       (let ((a!1 (<= (select (select (select A i) j) k) _i0))
                             (a!3 (= (select (select (select A _i2) _i1) _i0) 0)))
                       (let ((a!2 (and a!1 (< _i0 d3) (= (mod (- _i0 0) 1) 0))))
                         (=> a!2 (not a!3)))))))))))
  (let ((a!2 (and a!1 (< _i2 i) (= (mod (- _i2 0) 1) 0))))
    (=> a!2 a!3))))
] [
(forall ((_i1 Int))
  (let ((a!1 (<= (select (select (select A i) j) k) _i1)))
  (let ((a!2 (and a!1 (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!2
        (forall ((_i0 Int))
          (let ((a!1 (<= (select (select (select A i) j) k) _i0))
                (a!3 (= (select (select (select A i) _i1) _i0) 0)))
          (let ((a!2 (and a!1 (< _i0 d3) (= (mod (- _i0 0) 1) 0))))
            (=> a!2 (not a!3)))))))))
] [
(forall ((_i2 Int))
  (let ((a!1 (<= (select (select (select A i) j) k) _i2))
        (a!3 (forall ((_i1 Int))
               (let ((a!1 (<= (select (select (select A i) j) k) _i1)))
               (let ((a!2 (and a!1 (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!2
                     (forall ((_i0 Int))
                       (let ((a!1 (<= (select (select (select A i) j) k) _i0))
                             (a!3 (= (select (select (select A _i2) _i1) _i0) 0)))
                       (let ((a!2 (and a!1 (< _i0 d3) (= (mod (- _i0 0) 1) 0))))
                         (=> a!2 (not a!3)))))))))))
  (let ((a!2 (and a!1 (< _i2 i) (= (mod (- _i2 0) 1) 0))))
    (=> a!2 a!3))))
] [
(forall ((_i0 Int))
  (let ((a!1 (<= (select (select (select A i) j) k) _i0))
        (a!3 (= (select (select (select A i) j) _i0) 0)))
  (let ((a!2 (and a!1 (< _i0 k) (= (mod (- _i0 0) 1) 0))))
    (=> a!2 (not a!3)))))
] [
(forall ((_i2 Int))
  (let ((a!1 (<= (select (select (select A i) j) k) _i2))
        (a!3 (forall ((_i1 Int))
               (let ((a!1 (<= (select (select (select A i) j) k) _i1)))
               (let ((a!2 (and a!1 (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!2
                     (forall ((_i0 Int))
                       (let ((a!1 (<= (select (select (select A i) j) k) _i0))
                             (a!3 (= (select (select (select A _i2) _i1) _i0) 0)))
                       (let ((a!2 (and a!1 (< _i0 k) (= (mod (- _i0 0) 1) 0))))
                         (=> a!2 (not a!3)))))))))))
  (let ((a!2 (and a!1 (< _i2 i) (= (mod (- _i2 0) 1) 0))))
    (=> a!2 a!3))))
] [
(forall ((_i1 Int))
  (let ((a!1 (<= (select (select (select A i) j) k) _i1)))
  (let ((a!2 (and a!1 (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!2
        (forall ((_i0 Int))
          (let ((a!1 (<= (select (select (select A i) j) k) _i0))
                (a!3 (= (select (select (select A i) _i1) _i0) 0)))
          (let ((a!2 (and a!1 (< _i0 k) (= (mod (- _i0 0) 1) 0))))
            (=> a!2 (not a!3)))))))))
] [
(forall ((_i2 Int))
  (let ((a!1 (<= (select (select (select A i) j) k) _i2))
        (a!3 (forall ((_i1 Int))
               (let ((a!1 (<= (select (select (select A i) j) k) _i1)))
               (let ((a!2 (and a!1 (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!2
                     (forall ((_i0 Int))
                       (let ((a!1 (<= (select (select (select A i) j) k) _i0))
                             (a!3 (= (select (select (select A _i2) _i1) _i0) 0)))
                       (let ((a!2 (and a!1 (< _i0 k) (= (mod (- _i0 0) 1) 0))))
                         (=> a!2 (not a!3)))))))))))
  (let ((a!2 (and a!1 (< _i2 i) (= (mod (- _i2 0) 1) 0))))
    (=> a!2 a!3))))
] 
[B6] in :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(> d1 i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [(> d2 j)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
        (a!2 (= (select (select (select A i) j) _i0) 0)))
    (=> a!1 (not a!2))))
] [(> d3 k)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 k)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 k)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] 
[B6]-> [B5] out :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(> d1 i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [(> d2 j)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
        (a!2 (= (select (select (select A i) j) _i0) 0)))
    (=> a!1 (not a!2))))
] [(> d3 k)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 k)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 k)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(= (select (select (select A i) j) k) 0)] [
(forall ((_i2 Int))
  (let ((a!1 (<= (select (select (select A i) j) k) _i2))
        (a!3 (forall ((_i1 Int))
               (let ((a!1 (<= (select (select (select A i) j) k) _i1)))
               (let ((a!2 (and a!1 (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!2
                     (forall ((_i0 Int))
                       (let ((a!1 (<= (select (select (select A i) j) k) _i0))
                             (a!3 (= (select (select (select A _i2) _i1) _i0) 0)))
                       (let ((a!2 (and a!1 (< _i0 d3) (= (mod (- _i0 0) 1) 0))))
                         (=> a!2 (not a!3)))))))))))
  (let ((a!2 (and a!1 (< _i2 i) (= (mod (- _i2 0) 1) 0))))
    (=> a!2 a!3))))
] [
(forall ((_i1 Int))
  (let ((a!1 (<= (select (select (select A i) j) k) _i1)))
  (let ((a!2 (and a!1 (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!2
        (forall ((_i0 Int))
          (let ((a!1 (<= (select (select (select A i) j) k) _i0))
                (a!3 (= (select (select (select A i) _i1) _i0) 0)))
          (let ((a!2 (and a!1 (< _i0 d3) (= (mod (- _i0 0) 1) 0))))
            (=> a!2 (not a!3)))))))))
] [
(forall ((_i2 Int))
  (let ((a!1 (<= (select (select (select A i) j) k) _i2))
        (a!3 (forall ((_i1 Int))
               (let ((a!1 (<= (select (select (select A i) j) k) _i1)))
               (let ((a!2 (and a!1 (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!2
                     (forall ((_i0 Int))
                       (let ((a!1 (<= (select (select (select A i) j) k) _i0))
                             (a!3 (= (select (select (select A _i2) _i1) _i0) 0)))
                       (let ((a!2 (and a!1 (< _i0 d3) (= (mod (- _i0 0) 1) 0))))
                         (=> a!2 (not a!3)))))))))))
  (let ((a!2 (and a!1 (< _i2 i) (= (mod (- _i2 0) 1) 0))))
    (=> a!2 a!3))))
] [
(forall ((_i0 Int))
  (let ((a!1 (<= (select (select (select A i) j) k) _i0))
        (a!3 (= (select (select (select A i) j) _i0) 0)))
  (let ((a!2 (and a!1 (< _i0 k) (= (mod (- _i0 0) 1) 0))))
    (=> a!2 (not a!3)))))
] [
(forall ((_i2 Int))
  (let ((a!1 (<= (select (select (select A i) j) k) _i2))
        (a!3 (forall ((_i1 Int))
               (let ((a!1 (<= (select (select (select A i) j) k) _i1)))
               (let ((a!2 (and a!1 (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!2
                     (forall ((_i0 Int))
                       (let ((a!1 (<= (select (select (select A i) j) k) _i0))
                             (a!3 (= (select (select (select A _i2) _i1) _i0) 0)))
                       (let ((a!2 (and a!1 (< _i0 k) (= (mod (- _i0 0) 1) 0))))
                         (=> a!2 (not a!3)))))))))))
  (let ((a!2 (and a!1 (< _i2 i) (= (mod (- _i2 0) 1) 0))))
    (=> a!2 a!3))))
] [
(forall ((_i1 Int))
  (let ((a!1 (<= (select (select (select A i) j) k) _i1)))
  (let ((a!2 (and a!1 (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!2
        (forall ((_i0 Int))
          (let ((a!1 (<= (select (select (select A i) j) k) _i0))
                (a!3 (= (select (select (select A i) _i1) _i0) 0)))
          (let ((a!2 (and a!1 (< _i0 k) (= (mod (- _i0 0) 1) 0))))
            (=> a!2 (not a!3)))))))))
] [
(forall ((_i2 Int))
  (let ((a!1 (<= (select (select (select A i) j) k) _i2))
        (a!3 (forall ((_i1 Int))
               (let ((a!1 (<= (select (select (select A i) j) k) _i1)))
               (let ((a!2 (and a!1 (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!2
                     (forall ((_i0 Int))
                       (let ((a!1 (<= (select (select (select A i) j) k) _i0))
                             (a!3 (= (select (select (select A _i2) _i1) _i0) 0)))
                       (let ((a!2 (and a!1 (< _i0 k) (= (mod (- _i0 0) 1) 0))))
                         (=> a!2 (not a!3)))))))))))
  (let ((a!2 (and a!1 (< _i2 i) (= (mod (- _i2 0) 1) 0))))
    (=> a!2 a!3))))
] 
[B6]-> [B4] out :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(> d1 i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [(> d2 j)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
        (a!2 (= (select (select (select A i) j) _i0) 0)))
    (=> a!1 (not a!2))))
] [(> d3 k)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 k)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 k)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(let ((a!1 (= (select (select (select A i) j) k) 0)))
  (not a!1))] 
[B7] in :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(> d1 i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [(> d2 j)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
        (a!2 (= (select (select (select A i) j) _i0) 0)))
    (=> a!1 (not a!2))))
] 
[B7]-> [B6] out :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(> d1 i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [(> d2 j)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
        (a!2 (= (select (select (select A i) j) _i0) 0)))
    (=> a!1 (not a!2))))
] [(> d3 k)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 k)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 k)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] 
[B7]-> [B3] out :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(> d1 i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [(> d2 j)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
        (a!2 (= (select (select (select A i) j) _i0) 0)))
    (=> a!1 (not a!2))))
] [(<= d3 k)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
        (a!2 (= (select (select (select A i) j) _i0) 0)))
    (=> a!1 (not a!2))))
] 
[B8] in :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(> d1 i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [(> d2 j)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] 
[B8]-> [B7] out :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(> d1 i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [(> d2 j)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(= k 0)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= k _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= k _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= k _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= k _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= k _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= k _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= k _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= k _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(phi k 0 1)] 
[B9] in :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(> d1 i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] 
[B9]-> [B8] out :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(> d1 i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [(> d2 j)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] 
[B9]-> [B2] out :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(> d1 i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [(<= d2 j)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] 
[B10] in :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(> d1 i)] 
[B10]-> [B9] out :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(> d1 i)] [(= j 0)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= j _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= j _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= j _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(phi j 0 1)] 
[B11] in :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] 
[B11]-> [B10] out :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(> d1 i)] 
[B11]-> [B1] out :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(<= d1 i)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 d1) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] 
[B12] in :
[B12]-> [B11] out :[(= i 0)] [(phi i 0 1)] 
[B13] in :
[B13]-> [B12] out :
time: 57.863270 s
*******************process function::  find***************
*******************process function end::  find***************
--------------------result--------------------
[B0] in :[(> i j)] [(= (select A (+ (- 1) i)) x)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> x (select A (+ (- 1) _i0))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 j) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> x (select A (+ (- 1) _i0))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (= (mod (- _i0 (- size 1)) (- 1)) 0)))
    (=> (and (<= i _i0) (<= _i0 (- size 1)) a!1) (>= (select A _i0) x))))
] 
[B1] in :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> x (select A (+ (- 1) _i0))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (= (mod (- _i0 (- size 1)) (- 1)) 0)))
    (=> (and (< j _i0) (<= _i0 (- size 1)) a!1) (>= (select A _i0) x))))
] [(> i j)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 j) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> x (select A (+ (- 1) _i0))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (= (mod (- _i0 (- size 1)) (- 1)) 0)))
    (=> (and (<= i _i0) (<= _i0 (- size 1)) a!1) (>= (select A _i0) x))))
] 
[B1]-> [B0] out :[(> i j)] [(= (select A (+ (- 1) i)) x)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> x (select A (+ (- 1) _i0))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 j) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> x (select A (+ (- 1) _i0))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (= (mod (- _i0 (- size 1)) (- 1)) 0)))
    (=> (and (<= i _i0) (<= _i0 (- size 1)) a!1) (>= (select A _i0) x))))
] 
[B2] in :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> x (select A (+ (- 1) _i0))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (= (mod (- _i0 (- size 1)) (- 1)) 0)))
    (=> (and (< j _i0) (<= _i0 (- size 1)) a!1) (>= (select A _i0) x))))
] 
[B2]-> [B11] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> x (select A (+ (- 1) _i0))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (= (mod (- _i0 (- size 1)) (- 1)) 0)))
    (=> (and (< j _i0) (<= _i0 (- size 1)) a!1) (>= (select A _i0) x))))
] 
[B3] in :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> x (select A (+ (- 1) _i0))))))
] [(<= x (select A i))] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> (select A i) (select A (+ (- 1) _i0))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (= (mod (- _i0 (- size 1)) (- 1)) 0)))
    (=> (and (< j _i0) (<= _i0 (- size 1)) a!1) (>= (select A _i0) x))))
] [(>= j i)] [(> x (select A j))] [(> (select A i) (select A j))] [
(forall ((_i0 Int))
  (let ((a!1 (= (mod (- _i0 (- size 1)) (- 1)) 0)))
    (=> (and (< j _i0) (<= _i0 (- size 1)) a!1) (< x (select A _i0)))))
] [
(forall ((_i0 Int))
  (let ((a!1 (= (mod (- _i0 (- size 1)) (- 1)) 0)))
    (=> (and (< j _i0) (<= _i0 (- size 1)) a!1) (< (select A j) (select A _i0)))))
] [(> j i)] 
[B3]-> [B2] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> x (select A (+ (- 1) _i0))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> (select A i) (select A (+ (- 1) _i0))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (= (mod (- _i0 (- size 1)) (- 1)) 0)))
    (=> (and (< j _i0) (<= _i0 (- size 1)) a!1) (<= x (select A _i0)))))
] 
[B4] in :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> x (select A (+ (- 1) _i0))))))
] [(<= x (select A i))] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> (select A i) (select A (+ (- 1) _i0))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (= (mod (- _i0 (- size 1)) (- 1)) 0)))
    (=> (and (< j _i0) (<= _i0 (- size 1)) a!1) (>= (select A _i0) x))))
] 
[B4]-> [B3] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> x (select A (+ (- 1) _i0))))))
] [(<= x (select A i))] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> (select A i) (select A (+ (- 1) _i0))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (= (mod (- _i0 (- size 1)) (- 1)) 0)))
    (=> (and (< j _i0) (<= _i0 (- size 1)) a!1) (>= (select A _i0) x))))
] [(>= j i)] [(> x (select A j))] [(> (select A i) (select A j))] [
(forall ((_i0 Int))
  (let ((a!1 (= (mod (- _i0 (- size 1)) (- 1)) 0)))
    (=> (and (< j _i0) (<= _i0 (- size 1)) a!1) (< x (select A _i0)))))
] [
(forall ((_i0 Int))
  (let ((a!1 (= (mod (- _i0 (- size 1)) (- 1)) 0)))
    (=> (and (< j _i0) (<= _i0 (- size 1)) a!1) (< (select A j) (select A _i0)))))
] [(> j i)] 
[B4]-> [B2] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> x (select A (+ (- 1) _i0))))))
] [(<= x (select A i))] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> (select A i) (select A (+ (- 1) _i0))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (= (mod (- _i0 (- size 1)) (- 1)) 0)))
    (=> (and (< j _i0) (<= _i0 (- size 1)) a!1) (>= (select A _i0) x))))
] [(> i j)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 j) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> x (select A (+ (- 1) _i0))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 j) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> (select A i) (select A (+ (- 1) _i0))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (= (mod (- _i0 (- size 1)) (- 1)) 0)))
    (=> (and (<= i _i0) (<= _i0 (- size 1)) a!1) (>= (select A _i0) x))))
] [(<= j i)] [
(forall ((_i0 Int))
  (let ((a!1 (= (mod (- _i0 (- size 1)) (- 1)) 0)))
    (=> (and (< i _i0) (<= _i0 (- size 1)) a!1) (>= (select A _i0) x))))
] 
[B5] in :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> x (select A (+ (- 1) _i0))))))
] [(<= x (select A i))] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> (select A i) (select A (+ (- 1) _i0))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (= (mod (- _i0 (- size 1)) (- 1)) 0)))
    (=> (and (< j _i0) (<= _i0 (- size 1)) a!1) (>= (select A _i0) x))))
] 
[B5]-> [B8] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> x (select A (+ (- 1) _i0))))))
] [(<= x (select A i))] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> (select A i) (select A (+ (- 1) _i0))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (= (mod (- _i0 (- size 1)) (- 1)) 0)))
    (=> (and (< j _i0) (<= _i0 (- size 1)) a!1) (>= (select A _i0) x))))
] 
[B6] in :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> x (select A (+ (- 1) _i0))))))
] [(<= x (select A i))] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> (select A i) (select A (+ (- 1) _i0))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (= (mod (- _i0 (- size 1)) (- 1)) 0)))
    (=> (and (< j _i0) (<= _i0 (- size 1)) a!1) (>= (select A _i0) x))))
] [(>= j i)] [(>= (select A j) x)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> (select A j) (select A (+ (- 1) _i0))))))
] 
[B6]-> [B5] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> x (select A (+ (- 1) _i0))))))
] [(<= x (select A i))] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> (select A i) (select A (+ (- 1) _i0))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (= (mod (- _i0 (- size 1)) (- 1)) 0)))
    (=> (and (< j _i0) (<= _i0 (- size 1)) a!1) (>= (select A _i0) x))))
] 
[B7] in :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> x (select A (+ (- 1) _i0))))))
] [(<= x (select A i))] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> (select A i) (select A (+ (- 1) _i0))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (= (mod (- _i0 (- size 1)) (- 1)) 0)))
    (=> (and (< j _i0) (<= _i0 (- size 1)) a!1) (>= (select A _i0) x))))
] [(>= j i)] 
[B7]-> [B6] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> x (select A (+ (- 1) _i0))))))
] [(<= x (select A i))] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> (select A i) (select A (+ (- 1) _i0))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (= (mod (- _i0 (- size 1)) (- 1)) 0)))
    (=> (and (< j _i0) (<= _i0 (- size 1)) a!1) (>= (select A _i0) x))))
] [(>= j i)] [(>= (select A j) x)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> (select A j) (select A (+ (- 1) _i0))))))
] 
[B7]-> [B4] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> x (select A (+ (- 1) _i0))))))
] [(<= x (select A i))] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> (select A i) (select A (+ (- 1) _i0))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (= (mod (- _i0 (- size 1)) (- 1)) 0)))
    (=> (and (< j _i0) (<= _i0 (- size 1)) a!1) (>= (select A _i0) x))))
] [(>= j i)] [(> x (select A j))] [(> (select A i) (select A j))] [
(forall ((_i0 Int))
  (let ((a!1 (= (mod (- _i0 (- size 1)) (- 1)) 0)))
    (=> (and (< j _i0) (<= _i0 (- size 1)) a!1) (< x (select A _i0)))))
] [
(forall ((_i0 Int))
  (let ((a!1 (= (mod (- _i0 (- size 1)) (- 1)) 0)))
    (=> (and (< j _i0) (<= _i0 (- size 1)) a!1) (< (select A j) (select A _i0)))))
] 
[B8] in :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> x (select A (+ (- 1) _i0))))))
] [(<= x (select A i))] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> (select A i) (select A (+ (- 1) _i0))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (= (mod (- _i0 (- size 1)) (- 1)) 0)))
    (=> (and (< j _i0) (<= _i0 (- size 1)) a!1) (>= (select A _i0) x))))
] 
[B8]-> [B7] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> x (select A (+ (- 1) _i0))))))
] [(<= x (select A i))] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> (select A i) (select A (+ (- 1) _i0))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (= (mod (- _i0 (- size 1)) (- 1)) 0)))
    (=> (and (< j _i0) (<= _i0 (- size 1)) a!1) (>= (select A _i0) x))))
] [(>= j i)] 
[B8]-> [B4] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> x (select A (+ (- 1) _i0))))))
] [(<= x (select A i))] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> (select A i) (select A (+ (- 1) _i0))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (= (mod (- _i0 (- size 1)) (- 1)) 0)))
    (=> (and (< j _i0) (<= _i0 (- size 1)) a!1) (>= (select A _i0) x))))
] [(> i j)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 j) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> x (select A (+ (- 1) _i0))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 j) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> (select A i) (select A (+ (- 1) _i0))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (= (mod (- _i0 (- size 1)) (- 1)) 0)))
    (=> (and (<= i _i0) (<= _i0 (- size 1)) a!1) (>= (select A _i0) x))))
] 
[B9] in :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> x (select A (+ (- 1) _i0))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (= (mod (- _i0 (- size 1)) (- 1)) 0)))
    (=> (and (< j _i0) (<= _i0 (- size 1)) a!1) (>= (select A _i0) x))))
] [(<= i j)] [(> x (select A i))] [
(forall ((_i0 Int))
  (let ((a!1 (= (mod (- _i0 (- size 1)) (- 1)) 0)))
    (=> (and (< j _i0) (<= _i0 (- size 1)) a!1) (< x (select A _i0)))))
] [
(forall ((_i0 Int))
  (let ((a!1 (= (mod (- _i0 (- size 1)) (- 1)) 0)))
    (=> (and (< j _i0) (<= _i0 (- size 1)) a!1) (< (select A i) (select A _i0)))))
] 
[B9]-> [B2] out :[
(forall ((_i0 Int))
  (let ((a!1 (= (mod (- _i0 (- size 1)) (- 1)) 0)))
    (=> (and (< j _i0) (<= _i0 (- size 1)) a!1) (>= (select A _i0) x))))
] [
(forall ((_i0 Int))
  (let ((a!1 (= (mod (- _i0 (- size 1)) (- 1)) 0)))
    (=> (and (< j _i0) (<= _i0 (- size 1)) a!1) (< x (select A _i0)))))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> x (select A (+ (- 1) _i0))))))
] 
[B10] in :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> x (select A (+ (- 1) _i0))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (= (mod (- _i0 (- size 1)) (- 1)) 0)))
    (=> (and (< j _i0) (<= _i0 (- size 1)) a!1) (>= (select A _i0) x))))
] [(<= i j)] 
[B10]-> [B9] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> x (select A (+ (- 1) _i0))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (= (mod (- _i0 (- size 1)) (- 1)) 0)))
    (=> (and (< j _i0) (<= _i0 (- size 1)) a!1) (>= (select A _i0) x))))
] [(<= i j)] [(> x (select A i))] [
(forall ((_i0 Int))
  (let ((a!1 (= (mod (- _i0 (- size 1)) (- 1)) 0)))
    (=> (and (< j _i0) (<= _i0 (- size 1)) a!1) (< x (select A _i0)))))
] [
(forall ((_i0 Int))
  (let ((a!1 (= (mod (- _i0 (- size 1)) (- 1)) 0)))
    (=> (and (< j _i0) (<= _i0 (- size 1)) a!1) (< (select A i) (select A _i0)))))
] 
[B10]-> [B8] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> x (select A (+ (- 1) _i0))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (= (mod (- _i0 (- size 1)) (- 1)) 0)))
    (=> (and (< j _i0) (<= _i0 (- size 1)) a!1) (>= (select A _i0) x))))
] [(<= i j)] [(<= x (select A i))] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> (select A i) (select A (+ (- 1) _i0))))))
] 
[B11] in :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> x (select A (+ (- 1) _i0))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (= (mod (- _i0 (- size 1)) (- 1)) 0)))
    (=> (and (< j _i0) (<= _i0 (- size 1)) a!1) (>= (select A _i0) x))))
] 
[B11]-> [B10] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> x (select A (+ (- 1) _i0))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (= (mod (- _i0 (- size 1)) (- 1)) 0)))
    (=> (and (< j _i0) (<= _i0 (- size 1)) a!1) (>= (select A _i0) x))))
] [(<= i j)] 
[B11]-> [B1] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> x (select A (+ (- 1) _i0))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (= (mod (- _i0 (- size 1)) (- 1)) 0)))
    (=> (and (< j _i0) (<= _i0 (- size 1)) a!1) (>= (select A _i0) x))))
] [(> i j)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 j) (= (mod (- _i0 1) 1) 0))))
    (=> a!1 (> x (select A (+ (- 1) _i0))))))
] [
(forall ((_i0 Int))
  (let ((a!1 (= (mod (- _i0 (- size 1)) (- 1)) 0)))
    (=> (and (<= i _i0) (<= _i0 (- size 1)) a!1) (>= (select A _i0) x))))
] 
[B12] in :
[B12]-> [B11] out :[(= x (select A 0))] [(= i 1)] [(phi i 1 1)] [(= j (+ (- 1) size))] [(phi j (- size 1) (- 1))] 
[B13] in :
[B13]-> [B12] out :
time: 16.267999 s
*******************process function::  arrayInit4***************
*******************process function end::  arrayInit4***************
--------------------result--------------------
[B0] in :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 2) 0))))
    (=> a!1 (= (select A _i0) 0))))
] [(<= size i)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 size) (= (mod (- _i0 1) 2) 0))))
    (=> a!1 (= (select A _i0) 0))))
] 
[B1] in :[(> size i)] [(= (select A i) 0)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 2) 0))))
    (=> a!1 (= (select A _i0) 0))))
] 
[B1]-> [B3] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 2) 0))))
    (=> a!1 (= (select A _i0) 0))))
] 
[B2] in :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 2) 0))))
    (=> a!1 (= (select A _i0) 0))))
] [(> size i)] 
[B2]-> [B1] out :[(> size i)] [(= (select A i) 0)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 2) 0))))
    (=> a!1 (= (select A _i0) 0))))
] 
[B3] in :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 2) 0))))
    (=> a!1 (= (select A _i0) 0))))
] 
[B3]-> [B2] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 2) 0))))
    (=> a!1 (= (select A _i0) 0))))
] [(> size i)] 
[B3]-> [B0] out :[
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 i) (= (mod (- _i0 1) 2) 0))))
    (=> a!1 (= (select A _i0) 0))))
] [(<= size i)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 1 _i0) (< _i0 size) (= (mod (- _i0 1) 2) 0))))
    (=> a!1 (= (select A _i0) 0))))
] 
[B4] in :
[B4]-> [B3] out :[(= i 1)] [(phi i 1 2)] 
[B5] in :
[B5]-> [B4] out :
time: 0.534348 s
*******************process function::  threeDarrayCheck2***************
*******************process function end::  threeDarrayCheck2***************
--------------------result--------------------
[B0] in :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] 
[B1] in :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(<= d1 i)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 d1) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] 
[B1]-> [B0] out :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(<= d1 i)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 d1) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(= _ret 0)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= _ret _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= _ret _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= _ret _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= _ret _i2) (< _i2 d1) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= _ret _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= _ret _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] 
[B2] in :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(> d1 i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [(<= d2 j)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] 
[B2]-> [B11] out :[(<= d2 j)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] 
[B3] in :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(> d1 i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [(> d2 j)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
        (a!2 (= (select (select (select A i) j) _i0) 0)))
    (=> a!1 (not a!2))))
] [(<= d3 k)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
        (a!2 (= (select (select (select A i) j) _i0) 0)))
    (=> a!1 (not a!2))))
] 
[B3]-> [B9] out :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(> d1 i)] [(<= d3 k)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] 
[B4] in :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(> d1 i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [(> d2 j)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
        (a!2 (= (select (select (select A i) j) _i0) 0)))
    (=> a!1 (not a!2))))
] [(> d3 k)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 k)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 k)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(let ((a!1 (= (select (select (select A i) j) k) 0)))
  (not a!1))] 
[B4]-> [B7] out :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(> d1 i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [(> d2 j)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
        (a!2 (= (select (select (select A i) j) _i0) 0)))
    (=> a!1 (not a!2))))
] 
[B5] in :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(> d1 i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [(> d2 j)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
        (a!2 (= (select (select (select A i) j) _i0) 0)))
    (=> a!1 (not a!2))))
] [(> d3 k)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 k)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 k)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(= (select (select (select A i) j) k) 0)] [
(forall ((_i2 Int))
  (let ((a!1 (<= (select (select (select A i) j) k) _i2))
        (a!3 (forall ((_i1 Int))
               (let ((a!1 (<= (select (select (select A i) j) k) _i1)))
               (let ((a!2 (and a!1 (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!2
                     (forall ((_i0 Int))
                       (let ((a!1 (<= (select (select (select A i) j) k) _i0))
                             (a!3 (= (select (select (select A _i2) _i1) _i0) 0)))
                       (let ((a!2 (and a!1 (< _i0 d3) (= (mod (- _i0 0) 1) 0))))
                         (=> a!2 (not a!3)))))))))))
  (let ((a!2 (and a!1 (< _i2 i) (= (mod (- _i2 0) 1) 0))))
    (=> a!2 a!3))))
] [
(forall ((_i1 Int))
  (let ((a!1 (<= (select (select (select A i) j) k) _i1)))
  (let ((a!2 (and a!1 (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!2
        (forall ((_i0 Int))
          (let ((a!1 (<= (select (select (select A i) j) k) _i0))
                (a!3 (= (select (select (select A i) _i1) _i0) 0)))
          (let ((a!2 (and a!1 (< _i0 d3) (= (mod (- _i0 0) 1) 0))))
            (=> a!2 (not a!3)))))))))
] [
(forall ((_i2 Int))
  (let ((a!1 (<= (select (select (select A i) j) k) _i2))
        (a!3 (forall ((_i1 Int))
               (let ((a!1 (<= (select (select (select A i) j) k) _i1)))
               (let ((a!2 (and a!1 (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!2
                     (forall ((_i0 Int))
                       (let ((a!1 (<= (select (select (select A i) j) k) _i0))
                             (a!3 (= (select (select (select A _i2) _i1) _i0) 0)))
                       (let ((a!2 (and a!1 (< _i0 d3) (= (mod (- _i0 0) 1) 0))))
                         (=> a!2 (not a!3)))))))))))
  (let ((a!2 (and a!1 (< _i2 i) (= (mod (- _i2 0) 1) 0))))
    (=> a!2 a!3))))
] [
(forall ((_i0 Int))
  (let ((a!1 (<= (select (select (select A i) j) k) _i0))
        (a!3 (= (select (select (select A i) j) _i0) 0)))
  (let ((a!2 (and a!1 (< _i0 k) (= (mod (- _i0 0) 1) 0))))
    (=> a!2 (not a!3)))))
] [
(forall ((_i2 Int))
  (let ((a!1 (<= (select (select (select A i) j) k) _i2))
        (a!3 (forall ((_i1 Int))
               (let ((a!1 (<= (select (select (select A i) j) k) _i1)))
               (let ((a!2 (and a!1 (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!2
                     (forall ((_i0 Int))
                       (let ((a!1 (<= (select (select (select A i) j) k) _i0))
                             (a!3 (= (select (select (select A _i2) _i1) _i0) 0)))
                       (let ((a!2 (and a!1 (< _i0 k) (= (mod (- _i0 0) 1) 0))))
                         (=> a!2 (not a!3)))))))))))
  (let ((a!2 (and a!1 (< _i2 i) (= (mod (- _i2 0) 1) 0))))
    (=> a!2 a!3))))
] [
(forall ((_i1 Int))
  (let ((a!1 (<= (select (select (select A i) j) k) _i1)))
  (let ((a!2 (and a!1 (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!2
        (forall ((_i0 Int))
          (let ((a!1 (<= (select (select (select A i) j) k) _i0))
                (a!3 (= (select (select (select A i) _i1) _i0) 0)))
          (let ((a!2 (and a!1 (< _i0 k) (= (mod (- _i0 0) 1) 0))))
            (=> a!2 (not a!3)))))))))
] [
(forall ((_i2 Int))
  (let ((a!1 (<= (select (select (select A i) j) k) _i2))
        (a!3 (forall ((_i1 Int))
               (let ((a!1 (<= (select (select (select A i) j) k) _i1)))
               (let ((a!2 (and a!1 (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!2
                     (forall ((_i0 Int))
                       (let ((a!1 (<= (select (select (select A i) j) k) _i0))
                             (a!3 (= (select (select (select A _i2) _i1) _i0) 0)))
                       (let ((a!2 (and a!1 (< _i0 k) (= (mod (- _i0 0) 1) 0))))
                         (=> a!2 (not a!3)))))))))))
  (let ((a!2 (and a!1 (< _i2 i) (= (mod (- _i2 0) 1) 0))))
    (=> a!2 a!3))))
] 
[B5]-> [B0] out :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(> d1 i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [(> d2 j)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
        (a!2 (= (select (select (select A i) j) _i0) 0)))
    (=> a!1 (not a!2))))
] [(> d3 k)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 k)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 k)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(= (select (select (select A i) j) k) 0)] [
(forall ((_i2 Int))
  (let ((a!1 (<= (select (select (select A i) j) k) _i2))
        (a!3 (forall ((_i1 Int))
               (let ((a!1 (<= (select (select (select A i) j) k) _i1)))
               (let ((a!2 (and a!1 (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!2
                     (forall ((_i0 Int))
                       (let ((a!1 (<= (select (select (select A i) j) k) _i0))
                             (a!3 (= (select (select (select A _i2) _i1) _i0) 0)))
                       (let ((a!2 (and a!1 (< _i0 d3) (= (mod (- _i0 0) 1) 0))))
                         (=> a!2 (not a!3)))))))))))
  (let ((a!2 (and a!1 (< _i2 i) (= (mod (- _i2 0) 1) 0))))
    (=> a!2 a!3))))
] [
(forall ((_i1 Int))
  (let ((a!1 (<= (select (select (select A i) j) k) _i1)))
  (let ((a!2 (and a!1 (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!2
        (forall ((_i0 Int))
          (let ((a!1 (<= (select (select (select A i) j) k) _i0))
                (a!3 (= (select (select (select A i) _i1) _i0) 0)))
          (let ((a!2 (and a!1 (< _i0 d3) (= (mod (- _i0 0) 1) 0))))
            (=> a!2 (not a!3)))))))))
] [
(forall ((_i2 Int))
  (let ((a!1 (<= (select (select (select A i) j) k) _i2))
        (a!3 (forall ((_i1 Int))
               (let ((a!1 (<= (select (select (select A i) j) k) _i1)))
               (let ((a!2 (and a!1 (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!2
                     (forall ((_i0 Int))
                       (let ((a!1 (<= (select (select (select A i) j) k) _i0))
                             (a!3 (= (select (select (select A _i2) _i1) _i0) 0)))
                       (let ((a!2 (and a!1 (< _i0 d3) (= (mod (- _i0 0) 1) 0))))
                         (=> a!2 (not a!3)))))))))))
  (let ((a!2 (and a!1 (< _i2 i) (= (mod (- _i2 0) 1) 0))))
    (=> a!2 a!3))))
] [
(forall ((_i0 Int))
  (let ((a!1 (<= (select (select (select A i) j) k) _i0))
        (a!3 (= (select (select (select A i) j) _i0) 0)))
  (let ((a!2 (and a!1 (< _i0 k) (= (mod (- _i0 0) 1) 0))))
    (=> a!2 (not a!3)))))
] [
(forall ((_i2 Int))
  (let ((a!1 (<= (select (select (select A i) j) k) _i2))
        (a!3 (forall ((_i1 Int))
               (let ((a!1 (<= (select (select (select A i) j) k) _i1)))
               (let ((a!2 (and a!1 (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!2
                     (forall ((_i0 Int))
                       (let ((a!1 (<= (select (select (select A i) j) k) _i0))
                             (a!3 (= (select (select (select A _i2) _i1) _i0) 0)))
                       (let ((a!2 (and a!1 (< _i0 k) (= (mod (- _i0 0) 1) 0))))
                         (=> a!2 (not a!3)))))))))))
  (let ((a!2 (and a!1 (< _i2 i) (= (mod (- _i2 0) 1) 0))))
    (=> a!2 a!3))))
] [
(forall ((_i1 Int))
  (let ((a!1 (<= (select (select (select A i) j) k) _i1)))
  (let ((a!2 (and a!1 (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!2
        (forall ((_i0 Int))
          (let ((a!1 (<= (select (select (select A i) j) k) _i0))
                (a!3 (= (select (select (select A i) _i1) _i0) 0)))
          (let ((a!2 (and a!1 (< _i0 k) (= (mod (- _i0 0) 1) 0))))
            (=> a!2 (not a!3)))))))))
] [
(forall ((_i2 Int))
  (let ((a!1 (<= (select (select (select A i) j) k) _i2))
        (a!3 (forall ((_i1 Int))
               (let ((a!1 (<= (select (select (select A i) j) k) _i1)))
               (let ((a!2 (and a!1 (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!2
                     (forall ((_i0 Int))
                       (let ((a!1 (<= (select (select (select A i) j) k) _i0))
                             (a!3 (= (select (select (select A _i2) _i1) _i0) 0)))
                       (let ((a!2 (and a!1 (< _i0 k) (= (mod (- _i0 0) 1) 0))))
                         (=> a!2 (not a!3)))))))))))
  (let ((a!2 (and a!1 (< _i2 i) (= (mod (- _i2 0) 1) 0))))
    (=> a!2 a!3))))
] [(= _ret 1)] 
[B6] in :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(> d1 i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [(> d2 j)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
        (a!2 (= (select (select (select A i) j) _i0) 0)))
    (=> a!1 (not a!2))))
] [(> d3 k)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 k)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 k)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] 
[B6]-> [B5] out :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(> d1 i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [(> d2 j)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
        (a!2 (= (select (select (select A i) j) _i0) 0)))
    (=> a!1 (not a!2))))
] [(> d3 k)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 k)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 k)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(= (select (select (select A i) j) k) 0)] [
(forall ((_i2 Int))
  (let ((a!1 (<= (select (select (select A i) j) k) _i2))
        (a!3 (forall ((_i1 Int))
               (let ((a!1 (<= (select (select (select A i) j) k) _i1)))
               (let ((a!2 (and a!1 (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!2
                     (forall ((_i0 Int))
                       (let ((a!1 (<= (select (select (select A i) j) k) _i0))
                             (a!3 (= (select (select (select A _i2) _i1) _i0) 0)))
                       (let ((a!2 (and a!1 (< _i0 d3) (= (mod (- _i0 0) 1) 0))))
                         (=> a!2 (not a!3)))))))))))
  (let ((a!2 (and a!1 (< _i2 i) (= (mod (- _i2 0) 1) 0))))
    (=> a!2 a!3))))
] [
(forall ((_i1 Int))
  (let ((a!1 (<= (select (select (select A i) j) k) _i1)))
  (let ((a!2 (and a!1 (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!2
        (forall ((_i0 Int))
          (let ((a!1 (<= (select (select (select A i) j) k) _i0))
                (a!3 (= (select (select (select A i) _i1) _i0) 0)))
          (let ((a!2 (and a!1 (< _i0 d3) (= (mod (- _i0 0) 1) 0))))
            (=> a!2 (not a!3)))))))))
] [
(forall ((_i2 Int))
  (let ((a!1 (<= (select (select (select A i) j) k) _i2))
        (a!3 (forall ((_i1 Int))
               (let ((a!1 (<= (select (select (select A i) j) k) _i1)))
               (let ((a!2 (and a!1 (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!2
                     (forall ((_i0 Int))
                       (let ((a!1 (<= (select (select (select A i) j) k) _i0))
                             (a!3 (= (select (select (select A _i2) _i1) _i0) 0)))
                       (let ((a!2 (and a!1 (< _i0 d3) (= (mod (- _i0 0) 1) 0))))
                         (=> a!2 (not a!3)))))))))))
  (let ((a!2 (and a!1 (< _i2 i) (= (mod (- _i2 0) 1) 0))))
    (=> a!2 a!3))))
] [
(forall ((_i0 Int))
  (let ((a!1 (<= (select (select (select A i) j) k) _i0))
        (a!3 (= (select (select (select A i) j) _i0) 0)))
  (let ((a!2 (and a!1 (< _i0 k) (= (mod (- _i0 0) 1) 0))))
    (=> a!2 (not a!3)))))
] [
(forall ((_i2 Int))
  (let ((a!1 (<= (select (select (select A i) j) k) _i2))
        (a!3 (forall ((_i1 Int))
               (let ((a!1 (<= (select (select (select A i) j) k) _i1)))
               (let ((a!2 (and a!1 (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!2
                     (forall ((_i0 Int))
                       (let ((a!1 (<= (select (select (select A i) j) k) _i0))
                             (a!3 (= (select (select (select A _i2) _i1) _i0) 0)))
                       (let ((a!2 (and a!1 (< _i0 k) (= (mod (- _i0 0) 1) 0))))
                         (=> a!2 (not a!3)))))))))))
  (let ((a!2 (and a!1 (< _i2 i) (= (mod (- _i2 0) 1) 0))))
    (=> a!2 a!3))))
] [
(forall ((_i1 Int))
  (let ((a!1 (<= (select (select (select A i) j) k) _i1)))
  (let ((a!2 (and a!1 (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!2
        (forall ((_i0 Int))
          (let ((a!1 (<= (select (select (select A i) j) k) _i0))
                (a!3 (= (select (select (select A i) _i1) _i0) 0)))
          (let ((a!2 (and a!1 (< _i0 k) (= (mod (- _i0 0) 1) 0))))
            (=> a!2 (not a!3)))))))))
] [
(forall ((_i2 Int))
  (let ((a!1 (<= (select (select (select A i) j) k) _i2))
        (a!3 (forall ((_i1 Int))
               (let ((a!1 (<= (select (select (select A i) j) k) _i1)))
               (let ((a!2 (and a!1 (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!2
                     (forall ((_i0 Int))
                       (let ((a!1 (<= (select (select (select A i) j) k) _i0))
                             (a!3 (= (select (select (select A _i2) _i1) _i0) 0)))
                       (let ((a!2 (and a!1 (< _i0 k) (= (mod (- _i0 0) 1) 0))))
                         (=> a!2 (not a!3)))))))))))
  (let ((a!2 (and a!1 (< _i2 i) (= (mod (- _i2 0) 1) 0))))
    (=> a!2 a!3))))
] 
[B6]-> [B4] out :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(> d1 i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [(> d2 j)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
        (a!2 (= (select (select (select A i) j) _i0) 0)))
    (=> a!1 (not a!2))))
] [(> d3 k)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 k)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 k)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(let ((a!1 (= (select (select (select A i) j) k) 0)))
  (not a!1))] 
[B7] in :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(> d1 i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [(> d2 j)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
        (a!2 (= (select (select (select A i) j) _i0) 0)))
    (=> a!1 (not a!2))))
] 
[B7]-> [B6] out :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(> d1 i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [(> d2 j)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
        (a!2 (= (select (select (select A i) j) _i0) 0)))
    (=> a!1 (not a!2))))
] [(> d3 k)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 k)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 k)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] 
[B7]-> [B3] out :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(> d1 i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [(> d2 j)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 k) (= (mod (- _i0 0) 1) 0)))
        (a!2 (= (select (select (select A i) j) _i0) 0)))
    (=> a!1 (not a!2))))
] [(<= d3 k)] [
(forall ((_i0 Int))
  (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
        (a!2 (= (select (select (select A i) j) _i0) 0)))
    (=> a!1 (not a!2))))
] 
[B8] in :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(> d1 i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [(> d2 j)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] 
[B8]-> [B7] out :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(> d1 i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [(> d2 j)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(= k 0)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= k _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= k _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= k _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= k _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= k _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= k _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= k _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= k _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(phi k 0 1)] 
[B9] in :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(> d1 i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] 
[B9]-> [B8] out :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(> d1 i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [(> d2 j)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] 
[B9]-> [B2] out :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(> d1 i)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 j) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] [(<= d2 j)] [
(forall ((_i1 Int))
  (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
    (=> a!1
        (forall ((_i0 Int))
          (let ((a!1 (and (<= 0 _i0) (< _i0 d3) (= (mod (- _i0 0) 1) 0)))
                (a!2 (= (select (select (select A i) _i1) _i0) 0)))
            (=> a!1 (not a!2)))))))
] 
[B10] in :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(> d1 i)] 
[B10]-> [B9] out :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(> d1 i)] [(= j 0)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= j _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= j _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= j _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(phi j 0 1)] 
[B11] in :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] 
[B11]-> [B10] out :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(> d1 i)] 
[B11]-> [B1] out :[
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 i) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] [(<= d1 i)] [
(forall ((_i2 Int))
  (let ((a!1 (and (<= 0 _i2) (< _i2 d1) (= (mod (- _i2 0) 1) 0)))
        (a!2 (forall ((_i1 Int))
               (let ((a!1 (and (<= 0 _i1) (< _i1 d2) (= (mod (- _i1 0) 1) 0))))
                 (=> a!1
                     (forall ((_i0 Int))
                       (let ((a!1 (and (<= 0 _i0)
                                       (< _i0 d3)
                                       (= (mod (- _i0 0) 1) 0)))
                             (a!2 (= (select (select (select A _i2) _i1) _i0) 0)))
                         (=> a!1 (not a!2)))))))))
    (=> a!1 a!2)))
] 
[B12] in :
[B12]-> [B11] out :[(= i 0)] [(phi i 0 1)] 
[B13] in :
[B13]-> [B12] out :
time: 41.076770 s
time: 221 s
